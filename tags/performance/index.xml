<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>performance on Major Hayden ü§†</title><link>https://major.io/tags/performance/</link><description>Recent content in performance on Major Hayden ü§†</description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-sa/2.0/" target="_blank" rel="noopener">CC BY-SA 2.0&lt;/a></copyright><lastBuildDate>Sun, 27 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://major.io/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Using the pressure stall information interface in kernel 4.20</title><link>https://major.io/2019/01/27/using-the-pressure-stall-information-interface-in-kernel-4.20/</link><pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/01/27/using-the-pressure-stall-information-interface-in-kernel-4.20/</guid><description>Fedora 29 now has kernel 4.20 available and it has lots of new features. One of the more interesting and easy to use features is the pressure stall information interface.
Load average We&amp;rsquo;re all familiar with the load average measurement on Linux machines, even if the numbers do seem a bit cryptic:
$ w 10:55:46 up 11 min, 1 user, load average: 0.42, 0.39, 0.26 The numbers denote how many processes were active over the last one, five and 15 minutes.</description></item><item><title>Performance benchmarks: KVM vs. Xen</title><link>https://major.io/2014/06/22/performance-benchmarks-kvm-vs-xen/</link><pubDate>Sun, 22 Jun 2014 17:00:14 +0000</pubDate><guid>https://major.io/2014/06/22/performance-benchmarks-kvm-vs-xen/</guid><description>After having some interesting discussions last week around KVM and Xen performance improvements over the past years, I decided to do a little research on my own. The last complete set of benchmarks I could find were from the Phoronix Haswell tests in 2013. There were some other benchmarks from 2011 but those were hotly debated due to the Xen patches headed into kernel 3.0.
The 2011 tests had a good list of benchmarks and I&amp;rsquo;ve done my best to replicate that list here three years later.</description></item><item><title>Helpful Linux I/O stack diagram</title><link>https://major.io/2014/04/30/helpful-linux-io-stack-diagram/</link><pubDate>Wed, 30 Apr 2014 15:03:46 +0000</pubDate><guid>https://major.io/2014/04/30/helpful-linux-io-stack-diagram/</guid><description>During one of my regular trips to reddit, I stumbled upon an amazingly helpful Linux I/O stack diagram:
It&amp;rsquo;s quite comprehensive and it can really help if you&amp;rsquo;re digging through a bottleneck and you&amp;rsquo;re not quite sure where to look. The original diagram is available in multiple formats from Thomas Krenn&amp;rsquo;s website.
If you combine that with this slide from Brendan Gregg&amp;rsquo;s Linux Performance Analysis and Tools presentation from Scale 11x, you can attack performance problems with precision:</description></item><item><title>Moving from OS X to Linux: Day One</title><link>https://major.io/2013/08/26/moving-from-os-x-to-linux-day-one/</link><pubDate>Tue, 27 Aug 2013 03:05:46 +0000</pubDate><guid>https://major.io/2013/08/26/moving-from-os-x-to-linux-day-one/</guid><description>The thought of using Linux as a manager in a highly Windows- and Mac-centric corporate environment isn&amp;rsquo;t something to be taken lightly. Integrating with Active Directory, wrangling email with Microsoft Exchange, and taming quirky Microsoft office documents can be a challenge even with a well-equipped Mac. I decided to make a change after using a Mac at Rackspace for six years.
Let&amp;rsquo;s get one thing straight: I&amp;rsquo;m not a Windows or Mac basher.</description></item><item><title>Red Hat Summit 2012: Thursday</title><link>https://major.io/2012/06/28/red-hat-summit-2012-thursday/</link><pubDate>Fri, 29 Jun 2012 04:54:41 +0000</pubDate><guid>https://major.io/2012/06/28/red-hat-summit-2012-thursday/</guid><description>Thursday has felt like the busiest, most jam-packed day of the week. The morning started off with three keynotes from HP, Intel, and Red Hat&amp;rsquo;s CTO, Brian Stevens.
HP&amp;rsquo;s message centered around converged cloud and that customers don&amp;rsquo;t need an all or nothing solution. They can pull the best pieces from every type of hosting to do what&amp;rsquo;s best for their business. The presentation from Intel was extremely heavy on the marketing side and didn&amp;rsquo;t have much to do with Red Hat.</description></item><item><title>Lesser-known but extremely handy Linux tools</title><link>https://major.io/2012/05/11/lesser-known-but-extremely-handy-linux-tools/</link><pubDate>Fri, 11 May 2012 21:28:58 +0000</pubDate><guid>https://major.io/2012/05/11/lesser-known-but-extremely-handy-linux-tools/</guid><description>Krist√≥f Kov√°cs has a fantastic post about some lesser-known Linux tools that can really come in handy in different situations.
If you haven&amp;rsquo;t tried dstat (I hadn&amp;rsquo;t until I saw Krist√≥f&amp;rsquo;s post), this is a great one to try. You can keep a running tally on various server metrics including load average, network transfer, and disk operations.
Here is some sample output:
----total-cpu-usage---- ---paging-- ---load-avg--- ------memory-usage----- -net/total- ---procs--- --io/total- ---system-- ----tcp-sockets---- usr sys idl wai hiq siq| in out | 1m 5m 15m | used buff cach free| recv send|run blk new| read writ| int csw |lis act syn tim clo 0 0 100 0 0 0| 0 0 |0.</description></item><item><title>Xen Summit 2011: My Takeways</title><link>https://major.io/2011/08/08/xen-summit-2011-my-takeways/</link><pubDate>Mon, 08 Aug 2011 12:58:54 +0000</pubDate><guid>https://major.io/2011/08/08/xen-summit-2011-my-takeways/</guid><description>Quite a few people who couldn&amp;rsquo;t make it to Xen Summit 2011 this year asked me to write a post summarizing my takeaways from the event. I&amp;rsquo;m not generally one to back down from peer pressure, so read on if you&amp;rsquo;re interested about the discussions at this year&amp;rsquo;s Summit.
The feeling I had at last year&amp;rsquo;s summit is that Xen was on the verge of losing traction in the market. Very few distributions still had Xen support going forward and much of the discussion was around the lack of dom0 support in upstream Linux kernels.</description></item><item><title>A modern implementation and explanation of Linux Virtual Server (LVS)</title><link>https://major.io/2010/06/27/modern-implementation-and-explanation-of-linux-virtual-server-lvs/</link><pubDate>Sun, 27 Jun 2010 16:03:27 +0000</pubDate><guid>https://major.io/2010/06/27/modern-implementation-and-explanation-of-linux-virtual-server-lvs/</guid><description>Typical configuration for a proxy-type load balancer
A typical load balancing configuration using hardware devices or software implementations will be organized such that they resemble the diagram at the right. I usually call this a proxy-type load balancing solution since the load balancer proxies your request to some other nodes. The standard order of operations looks like this:
client makes a request load balancer receives the request load balancer sends request to a web node the web server sends content back to the load balancer the load balancer responds to the client If you&amp;rsquo;re not familiar with load balancing, here&amp;rsquo;s an analogy.</description></item><item><title>WordPress + W3 Total Cache + MaxCDN How-To</title><link>https://major.io/2010/02/13/wordpress-w3-total-cache-maxcdn/</link><pubDate>Sun, 14 Feb 2010 03:56:30 +0000</pubDate><guid>https://major.io/2010/02/13/wordpress-w3-total-cache-maxcdn/</guid><description>It&amp;rsquo;s no secret that I&amp;rsquo;m a big fan of WordPress as a blog and CMS platform. While it does have its problems, it&amp;rsquo;s relatively simple to set up, it&amp;rsquo;s extensible, and - when properly configured - it has great performance. The WP Super Cache plugin has been a staple on my WordPress blogs for quite some time and it has solved almost all of my performance problems.
However, when you load up quite a few plugins or a heavy theme, the performance will dip due to the increased number of stylesheets, javascript files, and images.</description></item><item><title>Hunting down elusive sources of iowait</title><link>https://major.io/2008/03/11/hunting-down-elusive-sources-of-iowait/</link><pubDate>Tue, 11 Mar 2008 18:00:18 +0000</pubDate><guid>https://major.io/2008/03/11/hunting-down-elusive-sources-of-iowait/</guid><description>A question I&amp;rsquo;m asked daily is ‚ÄúHow can I find out what is generating iowait on my server?‚Äù Sure, you can dig through pages of lsof output, restart services, or run strace, but it can be a frustrating process. I saw a process on this blog post, and I changed the regexes to fit Red Hat and CentOS systems a bit better:
# /etc/init.d/syslog stop # echo 1 &amp;gt; /proc/sys/vm/block_dump # dmesg | egrep &amp;quot;READ|WRITE|dirtied&amp;quot; | egrep -o '([a-zA-Z]*)' | sort | uniq -c | sort -rn | head 1526 mysqld 819 httpd 429 kjournald 35 qmail 27 in 7 imapd 6 irqbalance 5 pop 4 pdflush 3 spamc In my specific situation, it looks like MySQL is the biggest abuser of my disk, followed by Apache and the filesystem journaling.</description></item></channel></rss>