<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on Major Hayden's Blog ü§†</title><link>https://major.io/tags/security/</link><description>Recent content in security on Major Hayden's Blog ü§†</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 05 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://major.io/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Inspecting OpenShift cgroups from inside the pod</title><link>https://major.io/2019/04/05/inspecting-openshift-cgroups-from-inside-the-pod/</link><pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/04/05/inspecting-openshift-cgroups-from-inside-the-pod/</guid><description>My team at Red Hat builds a lot of kernels in OpenShift pods as part of our work with the Continuous Kernel Integration (CKI) project. We have lots of different pod sizes depending on the type of work we are doing and our GitLab runners spawn these pods based on the tags in our GitLab CI pipeline.
Compiling with make When you compile a large software project, such as the Linux kernel, you can use multiple CPU cores to speed up the build.</description></item><item><title>Running Ansible in OpenShift with arbitrary UIDs</title><link>https://major.io/2019/03/22/running-ansible-in-openshift-with-arbitrary-uids/</link><pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/03/22/running-ansible-in-openshift-with-arbitrary-uids/</guid><description>My work at Red Hat involves testing lots and lots of kernels from various sources and we use GitLab CE to manage many of our repositories and run our CI jobs. Those jobs run in thousands of OpenShift containers that we spawn every day.
OpenShift has some handy security features that we like. First, each container is mounted read-only with some writable temporary space (and any volumes that you mount). Also, OpenShift uses arbitrarily assigned user IDs (UIDs) for each container.</description></item><item><title>Running Home Assistant in a Docker container with a Z-Wave USB stick</title><link>https://major.io/2019/01/14/running-home-assistant-in-a-docker-container-with-zwave-usb-stick/</link><pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/01/14/running-home-assistant-in-a-docker-container-with-zwave-usb-stick/</guid><description>The Home Assistant project provides a great open source way to get started with home automtion that can be entirely self-contained within your home. It already has plenty of integrations with external services, but it can also monitor Z-Wave devices at your home or office.
Here are my devices:
Monoprice Z-Wave Garade Door Sensor Aeotec Z-Stick Gen5 (ZW090) Fedora Linux server with Docker installed Install the Z-Wave stick Start by plugging the Z-Stick into your Linux server.</description></item><item><title>Disable autoplay for videos in Firefox 65</title><link>https://major.io/2018/12/18/disable-autoplay-for-videos-in-firefox-65/</link><pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate><guid>https://major.io/2018/12/18/disable-autoplay-for-videos-in-firefox-65/</guid><description>Firefox has some great features, but one of my favorites is the ability to disable autoplay for videos. We&amp;rsquo;ve all had one of those moments: your speakers are turned up and you browse to a website with an annoying advertisement that plays immediately.
This feature stopped working for me somewhere in the Firefox 65 beta releases. Also, the usual setting in the preference page (under Privacy &amp;amp; Security) seems to be missing.</description></item><item><title>Use a secret as an environment variable in OpenShift deployments</title><link>https://major.io/2018/12/06/use-secret-as-environment-variable-in-openshift-deployments/</link><pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate><guid>https://major.io/2018/12/06/use-secret-as-environment-variable-in-openshift-deployments/</guid><description>OpenShift deployments allow you to take a container image and run it within a cluster. You can easily add extra items to the deployment, such as environment variables or volumes.
The best practice for sensitive environment variables is to place them into a secret object rather than directly in the deployment configuration itself. Although this keeps the secret data out of the deployment, the environment variable is still exposed to the running application inside the container.</description></item><item><title>Changes in RHEL 7 Security Technical Implementation Guide Version 1, Release 3</title><link>https://major.io/2017/11/02/changes-in-rhel-7-security-technical-implementation-guide-version-1-release-3/</link><pubDate>Thu, 02 Nov 2017 15:00:25 +0000</pubDate><guid>https://major.io/2017/11/02/changes-in-rhel-7-security-technical-implementation-guide-version-1-release-3/</guid><description>The latest release of the Red Hat Enterprise Linux Security Technical Implementation Guide (STIG) was published last week. This release is Version 1, Release 3, and it contains four main changes:
V-77819 - Multifactor authentication is required for graphical logins V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled V-77823 - Single user mode must require user authentication V-77825 - Address space layout randomization (ASLR) must be enabled Deep dive Let&amp;rsquo;s break down this list to understand what each one means.</description></item><item><title>Apply the STIG to even more operating systems with ansible-hardening</title><link>https://major.io/2017/07/21/apply-stig-operating-systems-ansible-hardening/</link><pubDate>Fri, 21 Jul 2017 17:38:46 +0000</pubDate><guid>https://major.io/2017/07/21/apply-stig-operating-systems-ansible-hardening/</guid><description>Tons of improvements made their way into the ansible-hardening role in preparation for the OpenStack Pike release next month. The role has a new name, new documentation and extra tests.
The role uses the Security Technical Implementation Guide (STIG) produced by the Defense Information Systems Agency (DISA) and applies the guidelines to Linux hosts using Ansible. Every control is configurable via simple Ansible variables and each control is thoroughly documented.</description></item><item><title>Old role, new name: ansible-hardening</title><link>https://major.io/2017/06/27/old-role-new-name-ansible-hardening/</link><pubDate>Tue, 27 Jun 2017 20:49:44 +0000</pubDate><guid>https://major.io/2017/06/27/old-role-new-name-ansible-hardening/</guid><description>The interest in the openstack-ansible-security role has taken off faster than I expected, and one piece of constant feedback I received was around the name of the role. Some users were unsure if they needed to use the role in an OpenStack cloud or if the OpenStack-Ansible project was required.
The role works everywhere - OpenStack cloud or not. I started a mailing list thread on the topic and we eventually settled on a new name: ansible-hardening!</description></item><item><title>Enable AppArmor on a Debian Jessie cloud image</title><link>https://major.io/2017/05/24/enable-apparmor-on-a-debian-jessie-cloud-image/</link><pubDate>Wed, 24 May 2017 16:14:03 +0000</pubDate><guid>https://major.io/2017/05/24/enable-apparmor-on-a-debian-jessie-cloud-image/</guid><description>I merged some initial Debian support into the openstack-ansible-security role and ran into an issue enabling AppArmor. The apparmor service failed to start and I found this output in the system journal:
kernel: AppArmor: AppArmor disabled by boot time parameter Digging in That was unexpected. I was using the Debian jessie cloud image and it uses extlinux as the bootloader. The file didn&amp;rsquo;t reference AppArmor at all:
# cat /boot/extlinux/extlinux.conf default linux timeout 1 label linux kernel boot/vmlinuz-3.</description></item><item><title>RHEL 7 STIG v1 updates for openstack-ansible-security</title><link>https://major.io/2017/04/05/rhel-7-stig-v1-updates-for-openstack-ansible-security/</link><pubDate>Wed, 05 Apr 2017 17:46:17 +0000</pubDate><guid>https://major.io/2017/04/05/rhel-7-stig-v1-updates-for-openstack-ansible-security/</guid><description>DISA&amp;rsquo;s final release of the Red Hat Enterprise Linux (RHEL) 7 Security Technical Implementation Guide (STIG) came out a few weeks ago and it has plenty of improvements and changes. The openstack-ansible-security role has already been updated with these changes.
Quite a few duplicated STIG controls were removed and a few new ones were added. Some of the controls in the pre-release were difficult to implement, especially those that changed parameters for PKI-based authentication.</description></item><item><title>Takeaways from Bruce Schneier‚Äôs talk: ‚ÄúSecurity and Privacy in a Hyper-connected World‚Äù</title><link>https://major.io/2017/03/21/takeaways-from-bruce-schneiers-talk-security-and-privacy-in-a-hyper-connected-world/</link><pubDate>Wed, 22 Mar 2017 01:31:52 +0000</pubDate><guid>https://major.io/2017/03/21/takeaways-from-bruce-schneiers-talk-security-and-privacy-in-a-hyper-connected-world/</guid><description>&lt;p>&lt;a href="../../wp-content/uploads/2017/03/IMG_20170321_113057-e1490144858438.jpg">&lt;!-- raw HTML omitted -->&lt;/a>Bruce Schneier is one of my favorite speakers when it comes to the topic of all things security. His talk from IBM Interconnect 2017, &amp;ldquo;&lt;a href="https://myibm.ibm.com/events/interconnect/all-sessions/session/7350A">Security and Privacy in a Hyper-connected World&lt;/a>&amp;rdquo;, covered a wide range of security concerns.&lt;/p>
&lt;p>There were plenty of great quotes from the talk (scroll to the end for those) and I will summarize the main takeaways in this post.&lt;/p>
&lt;h2 id="people-process-and-technology">People, process, and technology&lt;/h2>
&lt;p>Bruce hits this topic a lot and for good reason: a weak link in any of the three could lead to a breach and a loss of data. He talked about the concept of security as a product and a process. Security is part of every product we consume. Whether it&amp;rsquo;s the safety of the food that makes it into our homes or the new internet-connected thermostat on the wall, security is part of the product.&lt;/p>
&lt;p>The companies that sell these products have a wide variety of strategies for managing security issues. Vulnerabilities in an internet-connected teapot are not worth much since there isn&amp;rsquo;t a lot of value there. It&amp;rsquo;s probably safe to assume that a teapot will have many more vulnerabilities than your average Apple or Android mobile device. Vulnerabilities in those devices are extremely valuable because the data we carry on those devices is valuable.&lt;/p>
&lt;h2 id="certainty-vs-uncertainty">Certainty vs. uncertainty&lt;/h2>
&lt;p>The talk moved into incident response and how to be successful when the worst happens. Automation only works when there&amp;rsquo;s a high degree of certainty in the situation. If there are variables that can be plugged into an algorithm and a result comes out the other end, automation is fantastic.&lt;/p>
&lt;p>Bruce recommended using orchestration when tackling uncertain situations, such as security incident responses. Orchestration involves people following processes and using technology where it makes sense.&lt;/p>
&lt;p>He talked about going through TSA checkpoints where metal detectors and x-ray scanners essentially run the show. Humans are around when these pieces of technology detect a problem. If you put a weapon into your carry on, the x-ray scanner will notify a human and that human can take an appropriate response to escalate the problem. If a regular passenger has a firearm in a carry-on bag, the police should be alerted. If an Air Marshal has one, then the situation is handled entirely differently - by a human.&lt;/p>
&lt;p>One other aspect he noted was around the uncertainty surrounding our data. Our control over our data, and our control over the systems that hold our data, is decreasing. Bruce remarked that he has more control over what his laptop does than his thermostat.&lt;/p>
&lt;h2 id="ooda-loop">OODA loop&lt;/h2>
&lt;p>Bruce raised awareness around the &lt;a href="https://en.wikipedia.org/wiki/OODA_loop">OODA loop&lt;/a> and its value when dealing with security incidents. Savvy readers will remember that the OODA loop was the crux of my &amp;ldquo;&lt;a href="https://www.slideshare.net/MajorHayden/be-an-inspiration-not-an-impostor-texas-linux-fest-2015">Be an inspiration, not an impostor&lt;/a>&amp;rdquo; talk about impostor syndrome.&lt;/p>
&lt;p>His point was that the OODA loop is a great way to structure a response during a stressful situation. When the orchestration works well, the defenders can complete an OODA loop faster than their adversaries can. When it works really well, the defenders can find ways to disrupt the adversaries' OODA loops and thwart the attack.&lt;/p></description></item><item><title>What I‚Äôm looking forward to at IBM Interconnect 2017</title><link>https://major.io/2017/02/23/what-im-looking-forward-to-at-ibm-interconnect-2017/</link><pubDate>Thu, 23 Feb 2017 16:35:02 +0000</pubDate><guid>https://major.io/2017/02/23/what-im-looking-forward-to-at-ibm-interconnect-2017/</guid><description>IBM Interconnect 2017 is coming up next month in Las Vegas. Last year&amp;rsquo;s conference was a whirlwind of useful talks, inspiring hallway conversations, and great networking opportunities. I was exhausted by the week&amp;rsquo;s end, but it was totally worth it.
One of my favorite sessions from last year was Tanmay Bakshi&amp;rsquo;s keynote. It was truly inspiring to see someone so young take command of such a large stage and teach us all something.</description></item><item><title>Display auditd messages with journalctl</title><link>https://major.io/2017/01/05/display-auditd-messages-with-journalctl/</link><pubDate>Thu, 05 Jan 2017 15:53:13 +0000</pubDate><guid>https://major.io/2017/01/05/display-auditd-messages-with-journalctl/</guid><description>All systems running systemd come with a powerful tool for reviewing the system journal: journalctl. It allows you to get a quick look at the system journal while also allowing you to heavily customize your view of the log.
I logged into a server recently that was having a problem and I found that the audit logs weren&amp;rsquo;t going into syslog. That&amp;rsquo;s no problem - they&amp;rsquo;re in the system journal. The system journal was filled with tons of other messages, so I decided to limit the output only to messages from the auditd unit:</description></item><item><title>augenrules fails with ‚Äúrule exists‚Äù when loading rules into auditd</title><link>https://major.io/2017/01/03/augenrules-fails-with-rule-exists-when-loading-rules-into-auditd/</link><pubDate>Tue, 03 Jan 2017 19:01:46 +0000</pubDate><guid>https://major.io/2017/01/03/augenrules-fails-with-rule-exists-when-loading-rules-into-auditd/</guid><description>When I came back from the holiday break, I found that the openstack-ansible-security role wasn&amp;rsquo;t passing tests any longer. The Ansible playbook stopped when augenrules ran to load the new audit rules. The error wasn&amp;rsquo;t terribly helpful:
/usr/sbin/augenrules: No change Error sending add rule data request (Rule exists) There was an error in line 5 of /etc/audit/audit.rules A duplicated rule? I&amp;rsquo;ve been working on lots of changes to implement the Red Hat Enterprise Linux 7 Security Technical Implementation Guide (STIG) and I assumed I put in the same rule twice with an errant copy and paste.</description></item><item><title>Talk Recap: Holistic Security for OpenStack Clouds</title><link>https://major.io/2016/10/31/talk-recap-holistic-security-for-openstack-clouds/</link><pubDate>Mon, 31 Oct 2016 15:52:47 +0000</pubDate><guid>https://major.io/2016/10/31/talk-recap-holistic-security-for-openstack-clouds/</guid><description>Thanks to everyone who attended my talk at the OpenStack Summit in Barcelona! I really enjoyed sharing some tips with the audience and it was great to meet some attendees in person afterwards.
If you weren&amp;rsquo;t able to make it, don&amp;rsquo;t fret! This post will cover some of the main points of the talk and link to the video and slides.
Purpose OpenStack clouds are inherently complex. Operating a cloud involves a lot of moving pieces in software, hardware, and networking.</description></item><item><title>HTTP/2 for the blog and icanhazip.com</title><link>https://major.io/2016/09/13/http2-for-the-blog-and-icanhazip-com/</link><pubDate>Tue, 13 Sep 2016 13:47:05 +0000</pubDate><guid>https://major.io/2016/09/13/http2-for-the-blog-and-icanhazip-com/</guid><description>I&amp;rsquo;ve recently updated this blog and icanhazip.com to enable HTTP/2! This probably won&amp;rsquo;t have much of an effect on users who query icanhazip.com with automated tools, but it should deliver the content on this blog a little faster. If you&amp;rsquo;re using an older, non-HTTP/2 client - don&amp;rsquo;t worry. All of the sites will continue working for you as they always have.
Head on over to Wikipedia to learn more about HTTP/2 and its benefits.</description></item><item><title>Join me on Thursday to talk about OpenStack LBaaS and security hardening</title><link>https://major.io/2016/07/19/join-me-on-thursday-to-talk-about-openstack-lbaas-and-security/</link><pubDate>Tue, 19 Jul 2016 14:09:40 +0000</pubDate><guid>https://major.io/2016/07/19/join-me-on-thursday-to-talk-about-openstack-lbaas-and-security/</guid><description>If you want to learn more about load balancers and security hardening in OpenStack clouds, join me on Thursday for the Rackspace Office Hours podcast! Walter Bentley, Kenneth Hui and I will be talking about some of the new features available in the 12.2 release of Rackspace Private Cloud powered by OpenStack.
The release has a tech preview of OpenStack&amp;rsquo;s Load Balancer as a Service project. The new LBaaSv2 API is stable and makes it easy to create load balancers, add pools, and add members.</description></item><item><title>New SELinux shirts are available</title><link>https://major.io/2016/06/16/new-selinux-shirts-available/</link><pubDate>Thu, 16 Jun 2016 21:22:52 +0000</pubDate><guid>https://major.io/2016/06/16/new-selinux-shirts-available/</guid><description>With the upcoming Red Hat Summit 2016 in San Francisco almost upon us, I decided to update the old SELinux shirts with two new designs:
You can buy these now over at Spreadshirt! There are styles there for men and women and I&amp;rsquo;ve priced them as low as the store will allow.
Spreadshirt is also running a sale for 15% off T-shirts until June 21st with the code TSHIRT16. Let&amp;rsquo;s make SELinux enforcing again!</description></item><item><title>Automated security hardening with Ansible: May updates</title><link>https://major.io/2016/05/26/automated-security-hardening-with-ansible-may-updates/</link><pubDate>Fri, 27 May 2016 02:40:33 +0000</pubDate><guid>https://major.io/2016/05/26/automated-security-hardening-with-ansible-may-updates/</guid><description>Lots of work has gone into the openstack-ansible-security Ansible role since I delivered a talk about it last month at the OpenStack Summit in Austin. Attendees asked for quite a few new features and I&amp;rsquo;ve seen quite a few bug reports (and that&amp;rsquo;s a good thing).
Here&amp;rsquo;s a list of the newest additions since the Summit:
New features Ubuntu 16.04 LTS (Xenial) support The role now works with Ubuntu 16.04 and its newest features, including systemd.</description></item><item><title>Troubleshooting OpenStack network connectivity</title><link>https://major.io/2016/05/16/troubleshooting-openstack-network-connectivity/</link><pubDate>Tue, 17 May 2016 02:43:41 +0000</pubDate><guid>https://major.io/2016/05/16/troubleshooting-openstack-network-connectivity/</guid><description>NOTE: This post is a work in progress. If you find something that I missed, feel free to leave a comment. I&amp;rsquo;ve made plenty of silly mistakes, but I&amp;rsquo;m sure I&amp;rsquo;ll make a few more. :)
Completing a deployment of an OpenStack cloud is an amazing feeling. There is so much automation and power at your fingertips as soon as you&amp;rsquo;re finished. However, the mood quickly turns sour when you create that first instance and it never responds to pings.</description></item><item><title>Preventing Ubuntu 16.04 from starting daemons when a package is installed</title><link>https://major.io/2016/05/05/preventing-ubuntu-16-04-starting-daemons-package-installed/</link><pubDate>Thu, 05 May 2016 15:54:27 +0000</pubDate><guid>https://major.io/2016/05/05/preventing-ubuntu-16-04-starting-daemons-package-installed/</guid><description>I&amp;rsquo;ve gone on some mini-rants in other posts about starting daemons immediately after they&amp;rsquo;re installed in Ubuntu and Debian. Things are a little different in Ubuntu 16.04 and I thought it might be helpful to share some tips for that release.
Before we do that, let&amp;rsquo;s go over something. I still don&amp;rsquo;t understand why this is a common practice within Ubuntu and Debian.
Take a look at the postinst-systemd-start script within the init-systems-helpers package (source link):</description></item><item><title>802.1x with NetworkManager using nmcli</title><link>https://major.io/2016/05/03/802-1x-networkmanager-using-nmcli/</link><pubDate>Tue, 03 May 2016 19:23:24 +0000</pubDate><guid>https://major.io/2016/05/03/802-1x-networkmanager-using-nmcli/</guid><description>Authenticating to a wired or wireless network using 802.1x is simple using NetworkManager&amp;rsquo;s GUI client. However, this gets challenging on headless servers without a graphical interface. The nmcli command isn&amp;rsquo;t able to store credentials in a keyring and this causes problems when you try to configure an interfaces with 802.1x authentication.
If you aren&amp;rsquo;t familiar with 802.1x, there is some light reading and heavier reading available on the topic.
Start by setting some basic configurations on the interface using the nmcli editor shell:</description></item><item><title>Talk Recap: Automated security hardening with OpenStack-Ansible</title><link>https://major.io/2016/04/26/talk-recap-automated-security-hardening-openstack-ansible/</link><pubDate>Tue, 26 Apr 2016 21:19:02 +0000</pubDate><guid>https://major.io/2016/04/26/talk-recap-automated-security-hardening-openstack-ansible/</guid><description>Today is the second day of the OpenStack Summit in Austin and I offered up a talk on host security hardening in OpenStack clouds. You can download the slides or watch the video here:
Here&amp;rsquo;s a quick recap of the talk and the conversations afterward:
Security tug-of-war Information security is a challenging task, mainly because it is more than just a technical problem. Technology is a big part of it, but communication, culture, and compromise are also critical.</description></item><item><title>OpenStack Summit in Austin is almost here!</title><link>https://major.io/2016/04/21/brace-openstack-summit-austin-coming/</link><pubDate>Thu, 21 Apr 2016 13:16:02 +0000</pubDate><guid>https://major.io/2016/04/21/brace-openstack-summit-austin-coming/</guid><description>OpenStack comes home to Austin on Monday for the OpenStack Summit! I will be there with plenty of other Rackers to learn, collaborate, and share our story.
If you&amp;rsquo;re interested in applying automated security hardening to an OpenStack cloud, be sure to drop by my talk on Tuesday from 11:15 to 11:55 AM. I&amp;rsquo;ll explain how Rackspace uses the openstack-ansible-security Ansible role to automatically apply hardening standards to servers in an OpenStack private cloud.</description></item><item><title>Enable IPv6 privacy in NetworkManager</title><link>https://major.io/2016/04/17/enable-ipv6-privacy-networkmanager/</link><pubDate>Sun, 17 Apr 2016 16:35:57 +0000</pubDate><guid>https://major.io/2016/04/17/enable-ipv6-privacy-networkmanager/</guid><description>On most IPv6-enabled networks, network addresses are distributed via stateless address autoconfiguration (SLAAC). That is a fancy way to say that hosts on an IPv6 network will configure their own IP addresses.
The process usually works like this:
The host sends out a router solicitation request: Hey, who is the router around here? The router replies with a prefix: I am the router and your IPv6 address should start with this prefix.</description></item></channel></rss>