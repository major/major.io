<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ruby on Major Hayden ðŸ¤ </title><link>https://major.io/tags/ruby/</link><description>Recent content in ruby on Major Hayden ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-sa/2.0/" target="_blank" rel="noopener">CC BY-SA 2.0&lt;/a></copyright><lastBuildDate>Fri, 08 Aug 2014 21:13:07 +0000</lastBuildDate><atom:link href="https://major.io/tags/ruby/index.xml" rel="self" type="application/rss+xml"/><item><title>Quickly post gists to GitHub Enterprise and github.com</title><link>https://major.io/2014/08/08/use-gist-gem-github-enterprise-github-com/</link><pubDate>Fri, 08 Aug 2014 21:13:07 +0000</pubDate><guid>https://major.io/2014/08/08/use-gist-gem-github-enterprise-github-com/</guid><description>The gist gem from GitHub allows you to quickly post text into a GitHub gist. You can use it with the public github.com site but you can also configure it to work with a GitHub Enterprise installation.
To get started, add two aliases to your ~/.bashrc:
alias gist=&amp;quot;gist -c&amp;quot; alias workgist=&amp;quot;GITHUB_URL=https://github.mycompany.com gist -c&amp;quot; The -c will copy the link to the gist to your keyboard whenever you use the gist tool on the command line.</description></item><item><title>Getting apache, PHP, and memcached working with SELinux</title><link>https://major.io/2011/09/07/getting-apache-php-and-memcached-working-with-selinux/</link><pubDate>Thu, 08 Sep 2011 03:55:00 +0000</pubDate><guid>https://major.io/2011/09/07/getting-apache-php-and-memcached-working-with-selinux/</guid><description>I&amp;rsquo;m using SELinux more often now on my Fedora 15 installations and I came up against a peculiar issue today on a new server. My PHP installation is configured to store its sessions in memcached and I brought over some working configurations from another server. However, each time I accessed a page which tried to initiate a session, the page load would hang for about a minute and I&amp;rsquo;d find this in my apache error logs:</description></item><item><title>Reincarnation of Twitterâ€™s realtime XMPP search term tracking with ruby</title><link>https://major.io/2010/06/17/reincarnation-of-twitters-realtime-xmpp-search-term-tracking-with-ruby/</link><pubDate>Thu, 17 Jun 2010 18:40:48 +0000</pubDate><guid>https://major.io/2010/06/17/reincarnation-of-twitters-realtime-xmpp-search-term-tracking-with-ruby/</guid><description>When Twitter was still in its early stages, you could track certain search terms in near-realtime via Jabber. It was quite popular and its performance degraded over time as more users signed up and began posting updates. Eventually, Twitter killed the jabber bot altogether. Many users have asked when it will return.
Well, it hasn&amp;rsquo;t returned, but you can build your own replacement with ruby, a jabber account, and a few gems.</description></item><item><title>Idiotâ€™s guide to OAuth logins for Twitter</title><link>https://major.io/2010/05/19/idiots-guide-to-oauth-logins-for-twitter/</link><pubDate>Thu, 20 May 2010 01:26:07 +0000</pubDate><guid>https://major.io/2010/05/19/idiots-guide-to-oauth-logins-for-twitter/</guid><description>It certainly shouldn&amp;rsquo;t be difficult, but I always have a tough time with OAuth. Twitter is dropping support for basic authentication on June 30th, 2010. I have some automated Twitter bots that need an upgrade, so I&amp;rsquo;ve been working on a quick solution to generate tokens for my scripts.
I formulated a pretty simple script using John Nunemaker&amp;rsquo;s twitter gem that will get it done manually for any scripts you have that read from or update Twitter:</description></item><item><title>New Linux security advisory Twitter bots</title><link>https://major.io/2009/02/05/new-linux-security-advisory-twitter-bots/</link><pubDate>Thu, 05 Feb 2009 17:00:03 +0000</pubDate><guid>https://major.io/2009/02/05/new-linux-security-advisory-twitter-bots/</guid><description>Thanks to the simplicity of ruby as well as the twitter and httparty gems, I&amp;rsquo;ve whipped up some Twitter bots today. The three bots will alert you when there are Red Hat, Ubuntu, or Debian security advisories. I&amp;rsquo;d set one up for Fedora, but their feed is broken today.
@redhaterrata - Red Hat Errata Updates
@ubuntusecurity - Ubuntu Security Notifications
@debiansecurity - Debian Security Advisories
As always, you can let me know if you have any suggestions for improvements, or other bots you&amp;rsquo;d like to see.</description></item><item><title>Viewing documentation for your ruby gems</title><link>https://major.io/2008/11/05/viewing-documentation-for-your-ruby-gems/</link><pubDate>Thu, 06 Nov 2008 00:14:57 +0000</pubDate><guid>https://major.io/2008/11/05/viewing-documentation-for-your-ruby-gems/</guid><description>I stumbled into this four line ruby script that will serve up all of the rdoc documentation for your server&amp;rsquo;s currently installed gems:
#!/usr/bin/env ruby require &amp;quot;rubygems/server&amp;quot; options = {:gemdir =&amp;gt; Gem.dir, :port =&amp;gt; 4242, :daemon =&amp;gt; true} Gem::Server::run(options) Thanks to Daniel for the ruby code!</description></item></channel></rss>