<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ssl on Major Hayden's Blog ðŸ¤ </title><link>https://major.io/tags/ssl/</link><description>Recent content in ssl on Major Hayden's Blog ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 31 Mar 2016 19:39:50 +0000</lastBuildDate><atom:link href="https://major.io/tags/ssl/index.xml" rel="self" type="application/rss+xml"/><item><title>Automated Letâ€™s Encrypt DNS challenges with Rackspace Cloud DNS</title><link>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</link><pubDate>Thu, 31 Mar 2016 19:39:50 +0000</pubDate><guid>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</guid><description>Let&amp;rsquo;s Encrypt has taken the world by storm by providing free SSL certificates that can be renewed via automated methods. They have issued over 1.4 million certificates since launch in the fall of 2015.
If you are not familiar with how Let&amp;rsquo;s Encrypt operates, here is an extremely simple explanation:
Create a private key Make a request for a new certificate Complete the challenge process You have a certificate! That is highly simplified, but there is plenty of detail available on how the whole system works.</description></item><item><title>Woot! Eight years of my blog</title><link>https://major.io/2015/04/14/woot-eight-years-of-my-blog/</link><pubDate>Tue, 14 Apr 2015 18:53:34 +0000</pubDate><guid>https://major.io/2015/04/14/woot-eight-years-of-my-blog/</guid><description>&lt;p>The spring of 2015 marks eight years of this blog! I&amp;rsquo;ve learned plenty of tough lessons along the way and I&amp;rsquo;ve made some changes recently that might be handy for other people. After watching &lt;a href="https://twitter.com/sashalaund">Sasha Laundy&amp;rsquo;s&lt;/a> video from her &lt;a href="http://blog.sashalaundy.com/talks/asking-helping/">awesome talk at Pycon 2015&lt;/a>, I&amp;rsquo;m even more energized to share what I&amp;rsquo;ve learned with other people. &lt;em>(Seriously: Go watch that video or review the slides whether you work in IT or not. It&amp;rsquo;s worth your time.)&lt;/em>&lt;/p>
&lt;p>Let&amp;rsquo;s start from the beginning.&lt;/p></description></item><item><title>Apacheâ€™s mod_proxy, mod_ssl, and BitTorrent Sync</title><link>https://major.io/2014/09/27/apaches-mod_proxy-mod_ssl-bittorrent-sync/</link><pubDate>Sun, 28 Sep 2014 02:08:18 +0000</pubDate><guid>https://major.io/2014/09/27/apaches-mod_proxy-mod_ssl-bittorrent-sync/</guid><description>BitTorrent Sync allows you to keep files synchronized between multiple computers or mobile devices. It&amp;rsquo;s a handy way to do backups, share files with friends, or automate the movement of data from device to device. It comes with a web frontend, called the Web UI, that allows for connections over HTTP or HTTPS.
Using HTTP across the internet to administer Sync seems totally absurd, so I decided to enable HTTPS. I quickly realized two things:</description></item><item><title>Survive the Google Reader exodus with Tiny Tiny RSS</title><link>https://major.io/2013/03/17/survive-the-google-reader-exodus-with-tiny-tiny-rss/</link><pubDate>Sun, 17 Mar 2013 21:27:38 +0000</pubDate><guid>https://major.io/2013/03/17/survive-the-google-reader-exodus-with-tiny-tiny-rss/</guid><description>It&amp;rsquo;s no secret that Google Reader is a popular way to keep up with your RSS feeds, but it&amp;rsquo;s getting shelved later this year. Most folks suggested Feedly as a replacement but I found the UI quite clunky in a browser and on Android devices.
Then someone suggested Tiny Tiny RSS. I couldn&amp;rsquo;t learn more about it on the day Google Reader&amp;rsquo;s shutdown was announced because the site was slammed. In a nutshell, Tiny Tiny RSS is a well-written web UI for managing feeds and a handy API for using it with mobile applications.</description></item><item><title>Using OpenSSLâ€™s s_client command with web servers using Server Name Indication (SNI)</title><link>https://major.io/2012/02/07/using-openssls-s_client-command-with-web-servers-using-server-name-indication-sni/</link><pubDate>Tue, 07 Feb 2012 14:07:41 +0000</pubDate><guid>https://major.io/2012/02/07/using-openssls-s_client-command-with-web-servers-using-server-name-indication-sni/</guid><description>One of the handiest tools in the OpenSSL toolbox is s_client. You can quickly view lots of details about the SSL certificates installed on a particular server and diagnose problems. For example, use this command to look at Google&amp;rsquo;s SSL certificates:
openssl s_client -connect encrypted.google.com:443 You&amp;rsquo;ll see the chain of certificates back to the original certificate authority where Google bought its certificate at the top, a copy of their SSL certificate in plain text in the middle, and a bunch of session-related information at the bottom.</description></item><item><title>Private network interfaces: the forgotten security hole</title><link>https://major.io/2010/03/01/private-network-interfaces-the-forgotten-security-hole/</link><pubDate>Tue, 02 Mar 2010 00:55:07 +0000</pubDate><guid>https://major.io/2010/03/01/private-network-interfaces-the-forgotten-security-hole/</guid><description>Regardless of the type of hosting you&amp;rsquo;re using - dedicated or cloud - it&amp;rsquo;s important to take network interface security seriously. Most often, threats from the internet are the only ones mentioned. However, if you share a private network with other customers, you have just as much risk on that interface.
Many cloud providers allow you access to a private network environment where you can exchange data with other instances or other services offered by the provider.</description></item><item><title>Requiring SSL encryption for WordPress administration</title><link>https://major.io/2009/07/31/requiring-ssl-encryption-for-wordpress-administration/</link><pubDate>Fri, 31 Jul 2009 13:13:26 +0000</pubDate><guid>https://major.io/2009/07/31/requiring-ssl-encryption-for-wordpress-administration/</guid><description>I was digging around for WordPress plugins last night that would allow me to secure the administrative login page for my WordPress installations. Most of the plugins are only compatible with WordPress 2.7.x or earlier, so I was a little concerned about them working with WordPress 2.8.2.
Then I stumbled upon the WordPress documentation that shows you how to require SSL with no plugins at all. If you&amp;rsquo;re using WordPress 2.</description></item><item><title>Adding SSL encryption to vsftpd</title><link>https://major.io/2007/11/26/adding-ssl-encryption-to-vsftpd/</link><pubDate>Mon, 26 Nov 2007 18:21:54 +0000</pubDate><guid>https://major.io/2007/11/26/adding-ssl-encryption-to-vsftpd/</guid><description>There may be some situations where you want to encrypt FTP traffic with SSL certificates rather than using SFTP with SSH. Using vsftpd with SSL encryption is quite easy, and here&amp;rsquo;s how it&amp;rsquo;s done:
First, you&amp;rsquo;ll need to make a new self-signed SSL certificate (if you don&amp;rsquo;t have a key and certificate available already):
Once you have the key and certificate made, you&amp;rsquo;ll need to concatenate them into a PEM file:</description></item><item><title>OpenSSL Tricks</title><link>https://major.io/2007/11/07/openssl-tricks/</link><pubDate>Wed, 07 Nov 2007 18:26:24 +0000</pubDate><guid>https://major.io/2007/11/07/openssl-tricks/</guid><description>Create a strong CSR and private key
openssl req -new -nodes -newkey rsa:2048 -out server.crt -keyout server.key
Parsing out the data within a certificate
openssl asn1parse -in server.crt
Checking a certificate/key modulus to see if they correspond
openssl rsa -in server.key -modulus -noout | openssl md5&amp;lt;br /&amp;gt; openssl x509 -in server.crt -modulus -noout | openssl md5
Convert a key from PEM -&amp;gt; DER
openssl rsa -inform PEM -in key.pem -outform DER -out keyout.</description></item></channel></rss>