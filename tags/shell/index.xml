<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shell on Major Hayden's Blog ü§†</title><link>https://major.io/tags/shell/</link><description>Recent content in shell on Major Hayden's Blog ü§†</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 18 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://major.io/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitoring OpenShift cron jobs</title><link>https://major.io/2019/11/18/monitoring-openshift-cron-jobs/</link><pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/11/18/monitoring-openshift-cron-jobs/</guid><description>Moving applications into an entirely containerized deployment, such as OpenShift or Kubernetes, requires care and attention. One aspect of both that is often overlooked is scheduled jobs, or cron jobs. ‚è∞
Cron jobs in OpenShift allow you to run certain containers on a regular basis and execute certain applications or scripts in those containers. You can use them to trigger GitLab CI pipelines, run certain housekeeping tasks in web applications, or run backups.</description></item><item><title>Monitor CyberPower UPS wattage</title><link>https://major.io/2019/11/08/monitor-cyberpower-ups-wattage/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/11/08/monitor-cyberpower-ups-wattage/</guid><description>I have a CyberPower CP1350AVRLCD under my desk at home and I use it to run my computer, monitors, speakers, and a lamp. My new computer is a little more power hungry than my old one since I just moved to to a Ryzen 3700x and Nvidia GeForce 2060 and I like to keep tabs on how much energy it is consuming.
Some power supplies offer a monitoring interface where you can watch your power consumption in real time, but I&amp;rsquo;m not willing to spend that much money.</description></item><item><title>Compare commits between two git branches</title><link>https://major.io/2012/03/15/compare-commits-between-two-git-branches/</link><pubDate>Thu, 15 Mar 2012 15:00:24 +0000</pubDate><guid>https://major.io/2012/03/15/compare-commits-between-two-git-branches/</guid><description>I found myself stuck in a particularly nasty situation a few weeks ago where I had two git branches with some commits that were mixed up. Some commits destined for a branch called development ended up in master. To make matters worse, development was rebased on top of master and the history was obviously mangled.
My goal was to find out which commits existed in development but didn&amp;rsquo;t exist anywhere in master.</description></item><item><title>Parse kernel.org changelogs with wget and grep</title><link>https://major.io/2009/12/15/parse-kernel-org-changelogs-with-wget-and-grep/</link><pubDate>Tue, 15 Dec 2009 23:14:47 +0000</pubDate><guid>https://major.io/2009/12/15/parse-kernel-org-changelogs-with-wget-and-grep/</guid><description>I try to keep up with the latest kernel update from kernel.org, but parsing through the output can be a pain if there are a lot of changes taking place. Here&amp;rsquo;s a handy one-liner to make it easier to read:
wget --quiet -O - http://www.kernel.org/pub/linux/kernel/v2.6/ChangeLog-2.6.31.8 | grep -A 4 ^commit | grep -B 1 &amp;quot;^--&amp;quot; | grep -v &amp;quot;^--&amp;quot; It should give you some output like this:
Linux 2.6.31.8 ext4: Fix potential fiemap deadlock (mmap_sem vs.</description></item></channel></rss>