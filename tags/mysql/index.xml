<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on Major Hayden's Blog ðŸ¤ </title><link>https://major.io/tags/mysql/</link><description>Recent content in mysql on Major Hayden's Blog ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 22 Feb 2014 02:30:53 +0000</lastBuildDate><atom:link href="https://major.io/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQLTuner v1.3.0</title><link>https://major.io/2014/02/21/mysqltuner-v1-3-0/</link><pubDate>Sat, 22 Feb 2014 02:30:53 +0000</pubDate><guid>https://major.io/2014/02/21/mysqltuner-v1-3-0/</guid><description>It&amp;rsquo;s been three long years since the last MySQLTuner release but you&amp;rsquo;ll now find version 1.3.0 available on GitHub. You can get it from the git repository or via these extremely simple methods:
wget -O mysqltuner.pl mysqltuner.pl wget --trust-server-names mysqltuner.pl There are a bunch of new features and fixes that you can find in the list of commits from today (2014-02-21). Some of the bigger adjustments include:
Basic support for MariaDB 10.</description></item><item><title>Survive the Google Reader exodus with Tiny Tiny RSS</title><link>https://major.io/2013/03/17/survive-the-google-reader-exodus-with-tiny-tiny-rss/</link><pubDate>Sun, 17 Mar 2013 21:27:38 +0000</pubDate><guid>https://major.io/2013/03/17/survive-the-google-reader-exodus-with-tiny-tiny-rss/</guid><description>It&amp;rsquo;s no secret that Google Reader is a popular way to keep up with your RSS feeds, but it&amp;rsquo;s getting shelved later this year. Most folks suggested Feedly as a replacement but I found the UI quite clunky in a browser and on Android devices.
Then someone suggested Tiny Tiny RSS. I couldn&amp;rsquo;t learn more about it on the day Google Reader&amp;rsquo;s shutdown was announced because the site was slammed. In a nutshell, Tiny Tiny RSS is a well-written web UI for managing feeds and a handy API for using it with mobile applications.</description></item><item><title>mysql-json-bridge: a simple JSON API for MySQL</title><link>https://major.io/2012/03/28/mysql-json-bridge-a-simple-json-api-for-mysql/</link><pubDate>Thu, 29 Mar 2012 02:34:53 +0000</pubDate><guid>https://major.io/2012/03/28/mysql-json-bridge-a-simple-json-api-for-mysql/</guid><description>My quest to get better at Python led me to create a new project on GitHub. It&amp;rsquo;s called mysql-json-bridge and it&amp;rsquo;s ready for you to use.
Why do we need a JSON API for MySQL?
The real need sprang from a situation I was facing daily at Rackspace. We have a lot of production and pre-production environments which are in flux but we need a way to query data from various MySQL servers for multiple purposes.</description></item><item><title>MySQLTuner mentioned at the Oâ€™Reilly MySQL Conference</title><link>https://major.io/2011/04/15/mysqltuner-mentioned-at-the-oreilly-mysql-conference/</link><pubDate>Sat, 16 Apr 2011 01:56:31 +0000</pubDate><guid>https://major.io/2011/04/15/mysqltuner-mentioned-at-the-oreilly-mysql-conference/</guid><description>If you push play, the video should scoot out to about the 14m40s mark where MySQLTuner appears on one of the slides. Thanks to Trent Hornibrook for letting me know!</description></item><item><title>Monitor MySQL restore progress with pv</title><link>https://major.io/2010/11/24/monitor-mysql-restore-progress-with-pv/</link><pubDate>Wed, 24 Nov 2010 16:43:28 +0000</pubDate><guid>https://major.io/2010/11/24/monitor-mysql-restore-progress-with-pv/</guid><description>The pv command is one that I really enjoy using but it&amp;rsquo;s also one that I often forget about. You can&amp;rsquo;t get a much more concise definition of what pv does than this one:
pv allows a user to see the progress of data through a pipeline, by giving information such as time elapsed, percentage completed (with progress bar), current throughput rate, total data transferred, and ETA.
The usage certainly isn&amp;rsquo;t complicated:</description></item><item><title>Private network interfaces: the forgotten security hole</title><link>https://major.io/2010/03/01/private-network-interfaces-the-forgotten-security-hole/</link><pubDate>Tue, 02 Mar 2010 00:55:07 +0000</pubDate><guid>https://major.io/2010/03/01/private-network-interfaces-the-forgotten-security-hole/</guid><description>Regardless of the type of hosting you&amp;rsquo;re using - dedicated or cloud - it&amp;rsquo;s important to take network interface security seriously. Most often, threats from the internet are the only ones mentioned. However, if you share a private network with other customers, you have just as much risk on that interface.
Many cloud providers allow you access to a private network environment where you can exchange data with other instances or other services offered by the provider.</description></item><item><title>MySQL: The total number of locks exceeds the lock table size</title><link>https://major.io/2010/02/16/mysql-the-total-number-of-locks-exceeds-the-lock-table-size-2/</link><pubDate>Tue, 16 Feb 2010 18:00:29 +0000</pubDate><guid>https://major.io/2010/02/16/mysql-the-total-number-of-locks-exceeds-the-lock-table-size-2/</guid><description>If you&amp;rsquo;re running an operation on a large number of rows within a table that uses the InnoDB storage engine, you might see this error:
ERROR 1206 (HY000): The total number of locks exceeds the lock table size
MySQL is trying to tell you that it doesn&amp;rsquo;t have enough room to store all of the row locks that it would need to execute your query. The only way to fix it for sure is to adjust innodb_buffer_pool_size and restart MySQL.</description></item><item><title>MySQL: The total number of locks exceeds the lock table size</title><link>https://major.io/2010/01/29/mysql-the-total-number-of-locks-exceeds-the-lock-table-size/</link><pubDate>Fri, 29 Jan 2010 13:12:21 +0000</pubDate><guid>https://major.io/2010/01/29/mysql-the-total-number-of-locks-exceeds-the-lock-table-size/</guid><description>This problem has cropped up for me a few times, but I&amp;rsquo;ve always forgotten to make a post about it. If you&amp;rsquo;re working with a large InnoDB table and you&amp;rsquo;re updating, inserting, or deleting a large volume of rows, you may stumble upon this error:
InnoDB stores its lock tables in the main buffer pool. This means that the number of locks you can have at the same time is limited by the innodb_buffer_pool_size variable that was set when MySQL was started.</description></item><item><title>PHPMyAdmin 3.x hides the table indexes</title><link>https://major.io/2009/04/03/phpmyadmin-3x-hides-the-table-indexes/</link><pubDate>Sat, 04 Apr 2009 00:51:48 +0000</pubDate><guid>https://major.io/2009/04/03/phpmyadmin-3x-hides-the-table-indexes/</guid><description>Users of PHPMyAdmin 3.x may find that the table indexes are automatically hidden at the bottom of the page. I find this to be a huge annoyance since table indexes are tremendously important to the structure of the table.
If you don&amp;rsquo;t want to downgrade to PHPMyAdmin 2.x, just add the following line to the top of your config.inc.php file:
This will cause the indexes to be displayed when you click Structure for a certain table.</description></item><item><title>MySQLTuner 1.0.0 is now available</title><link>https://major.io/2008/12/01/mysqltuner-100-is-now-available/</link><pubDate>Tue, 02 Dec 2008 00:31:43 +0000</pubDate><guid>https://major.io/2008/12/01/mysqltuner-100-is-now-available/</guid><description>It has finally arrived. MySQLTuner 1.0.0 is now available for download. Major improvements include full support for MySQL 5.1 and Solaris. You can review other changes in the changelog.
As always, I&amp;rsquo;d like to personally thank everyone who has made this release possible. Your efforts have provided benefits from MySQL users worldwide, and they have shown me how rewarding it is to maintain open source software.</description></item><item><title>Importing Excel files into MySQL with PHP</title><link>https://major.io/2008/11/07/importing-excel-files-into-mysql-with-php/</link><pubDate>Fri, 07 Nov 2008 19:42:45 +0000</pubDate><guid>https://major.io/2008/11/07/importing-excel-files-into-mysql-with-php/</guid><description>If you have Excel files that need to be imported into MySQL, you can import them easily with PHP. First, you will need to download some prerequisites:
PHPExcelReader - http://sourceforge.net/projects/phpexcelreader/
Spreadsheet_Excel_Writer - http://pear.php.net/package/Spreadsheet_Excel_Writer
Once you&amp;rsquo;ve downloaded both items, upload them to your server. Your directory listing on your server should have two directories: Excel (from PHPExcelReader) and Spreadsheet_Excel_Writer-x.x.x (from Spreadsheet_Excel_Writer). To work around a bug in PHPExcelReader, copy oleread.inc from the Excel directory into a new path:</description></item><item><title>MySQLTuner 0.9.9 is now available</title><link>https://major.io/2008/09/07/mysqltuner-099-is-now-available/</link><pubDate>Mon, 08 Sep 2008 02:05:03 +0000</pubDate><guid>https://major.io/2008/09/07/mysqltuner-099-is-now-available/</guid><description>MySQLTuner 0.9.9 is now available for download. There&amp;rsquo;s a new wiki for the script at wiki.mysqltuner.com. The new wiki contains links to downloads, changelogs, and other details.
If you want to know when the latest releases are available, there are multiple options:
Follow RackerHacker on Twitter Sign up for the MySQLTuner mailing list Use the --checkversion option when you run the script</description></item><item><title>MySQLTuner 0.9.8 is now available</title><link>https://major.io/2008/07/21/mysqltuner-098-is-now-available/</link><pubDate>Mon, 21 Jul 2008 17:17:14 +0000</pubDate><guid>https://major.io/2008/07/21/mysqltuner-098-is-now-available/</guid><description>MySQLTuner 0.9.8 is now available for download and it is full of new changes! So far, MySQLTuner has been downloaded almost 24,000 times. Thanks for making it so popular.
Easy download!
You can download it simply by running wget mysqltuner.pl. You will automatically be redirected to the script.
Access servers remotely
If you have multiple servers that you need to tune and monitor, simply download MySQLTuner onto one machine. You can run it against other servers by specifying a hostname, port, and login credentials.</description></item><item><title>MySQLTuner is now a Fedora 9 package!</title><link>https://major.io/2008/06/27/mysqltuner-is-now-a-fedora-9-package/</link><pubDate>Fri, 27 Jun 2008 17:16:56 +0000</pubDate><guid>https://major.io/2008/06/27/mysqltuner-is-now-a-fedora-9-package/</guid><description>Thanks to some work started by Ville SkyttÃ¤, MySQLTuner is now included in Fedora 9 repositories:
# cat /etc/fedora-release Fedora release 9 (Sulphur) # yum info mysqltuner Loaded plugins: fastestmirror, priorities, refresh-packagekit Loading mirror speeds from cached hostfile * updates: mirrors.usc.edu * fedora: mirror.unl.edu * livna: mirrors.tummy.com Available Packages Name : mysqltuner Arch : noarch Version : 0.9.1 Release : 4 Size : 11 k Repo : updates Summary : MySQL high performance tuning script URL : http://mysqltuner.</description></item><item><title>MySQL: ERROR 1040: Too many connections</title><link>https://major.io/2008/06/24/mysql-error-1040-too-many-connections/</link><pubDate>Tue, 24 Jun 2008 17:00:47 +0000</pubDate><guid>https://major.io/2008/06/24/mysql-error-1040-too-many-connections/</guid><description>If you run a fairly busy and/or badly configured MySQL server, you may receive something like this when attempting to connect:
MySQL is telling you that it is handling the maximum connections that you have configured it to handle. By default, MySQL will handle 100 connections simultaneously. This is very similar to the situation when Apache reaches the MaxClients setting. You won&amp;rsquo;t even be able to connect to MySQL to find out what is causing the connections to be used up, so you will be forced to restart the MySQL daemon to troubleshoot the issue.</description></item><item><title>MySQLTuner 0.9.1 available for Mandriva users</title><link>https://major.io/2008/06/21/mysqltuner-091-available-for-mandriva-users/</link><pubDate>Sun, 22 Jun 2008 02:54:03 +0000</pubDate><guid>https://major.io/2008/06/21/mysqltuner-091-available-for-mandriva-users/</guid><description>Thanks to some hard work from Oden Eriksson and Frederik Himpe, MySQLTuner 0.9.1 is available in a Mandriva package.</description></item><item><title>MySQLTuner v0.9.1 is now available</title><link>https://major.io/2008/06/18/mysqltuner-v091-is-now-available/</link><pubDate>Thu, 19 Jun 2008 02:53:58 +0000</pubDate><guid>https://major.io/2008/06/18/mysqltuner-v091-is-now-available/</guid><description>MySQLTuner v0.9.1 is now available! This long-awaited update includes bug fixes, feature enhancements, and compatibility improvements.
MySQLTuner now checks for fragmented tables
When deletes or updates are made on tables, MySQL will often leave holes behind that it hopes to fill in later. If the size and quantity keep climbing, the holes can cause performance degradation for writes and reads. Fragmentation can be corrected with OPTIMIZE TABLE, and the script recommends it if needed.</description></item><item><title>Remove backticks from MySQL dumps</title><link>https://major.io/2008/06/18/remove-backticks-from-mysql-dumps/</link><pubDate>Wed, 18 Jun 2008 17:00:01 +0000</pubDate><guid>https://major.io/2008/06/18/remove-backticks-from-mysql-dumps/</guid><description>I found myself in a peculiar situation last week. I&amp;rsquo;d been asked to downgrade a server from MySQL 4.1 to MySQL 3.23. Believe me, I tried to advise against the request, but I didn&amp;rsquo;t succeed.
I made a MySQL 3.23 compatible dump with --compatible=mysql323, but the dump came out with backticks around the database names. This works with some 3.23 versions, but it doesn&amp;rsquo;t work with others. Apparently RHEL 3&amp;rsquo;s MySQL 3.</description></item><item><title>Screencast topic requests?</title><link>https://major.io/2008/06/12/screencast-topic-requests/</link><pubDate>Thu, 12 Jun 2008 16:00:14 +0000</pubDate><guid>https://major.io/2008/06/12/screencast-topic-requests/</guid><description>I&amp;rsquo;ve received some great feedback on my first screencast. The suggestions have been helpful, and the compliments have made me want to create more free screencasts.
At this point, I&amp;rsquo;m opening it up to you - what would you like to learn? Of course, I&amp;rsquo;m still planning to make a full set of screencasts for the MySQL DBA certification, but that will come later.</description></item><item><title>MySQL: Canâ€™t drop one or more of the requested users</title><link>https://major.io/2008/06/11/mysql-cant-drop-one-or-more-of-the-requested-users/</link><pubDate>Wed, 11 Jun 2008 23:59:37 +0000</pubDate><guid>https://major.io/2008/06/11/mysql-cant-drop-one-or-more-of-the-requested-users/</guid><description>MySQL has quite a few cryptic error messages, and this one is one of the best:
mysql&amp;gt; DROP USER 'forums'@'db1.myserver.com'; ERROR 1268 (HY000): Can't drop one or more of the requested users Naturally, I was quite interested to know why MySQL wasn&amp;rsquo;t going to allow me to remove this user. There was nothing special about the user, but then again, this wasn&amp;rsquo;t a server that I personally managed, so I wasn&amp;rsquo;t sure what kind of configuration was in place.</description></item><item><title>Backing up MySQL to Amazonâ€™s S3</title><link>https://major.io/2008/06/05/backing-up-mysql-to-amazons-s3/</link><pubDate>Fri, 06 Jun 2008 00:18:49 +0000</pubDate><guid>https://major.io/2008/06/05/backing-up-mysql-to-amazons-s3/</guid><description>I received an e-mail from Tim Linden about a post he made in his blog about backing up MySQL data to Amazon&amp;rsquo;s S3.
The article goes over installing the Net::Amazon::S3 Perl module via WHM (which is handy for the cPanel users). However, if you&amp;rsquo;re not a cPanel user, you can install it via CPAN:
# perl -MCPAN -e 'install Net::Amazon::S3' If you&amp;rsquo;d rather install it through Webmin, go to the &amp;lsquo;Others&amp;rsquo; section, and click &amp;lsquo;Perl Modules&amp;rsquo;.</description></item><item><title>MySQLTuner v0.9.0 is now available</title><link>https://major.io/2008/04/06/mysqltuner-v090-is-now-available/</link><pubDate>Sun, 06 Apr 2008 14:30:28 +0000</pubDate><guid>https://major.io/2008/04/06/mysqltuner-v090-is-now-available/</guid><description>MySQLTuner v0.9.0 is now available. There is a bug fix and also a new feature!
Fixed a bug in the enumeration/sizing of tables in MySQL 5
In MySQL 5 on some distributions, a NULL is returned for the storage engine and data length. Luuk Vosslamber quickly e-mailed me about the bug yesterday and it has been fixed.
MySQLTuner version checking
MySQLTuner will now check to see if a new version is available when the script runs.</description></item><item><title>MySQLTuner v0.8.9 is now available</title><link>https://major.io/2008/04/05/mysqltuner-v089-is-now-available/</link><pubDate>Sat, 05 Apr 2008 16:03:14 +0000</pubDate><guid>https://major.io/2008/04/05/mysqltuner-v089-is-now-available/</guid><description>MySQLTuner v0.8.9 is now available. There are a few bug fixes, performance improvements, and readability adjustments.
Table enumeration and sizing can now be skipped
I&amp;rsquo;ve received reports that MySQLTuner will stall while enumerating tables on servers that contain a lot of tables or a lot of large tables. You can now use the --skipsize option to skip over the table enumeration process and let the script finish. However, you will not be able to receive some recommendations since the script was unable to determine which storage engines are enabled.</description></item><item><title>Importing MySQL dumps made on 64-bit servers</title><link>https://major.io/2008/03/21/importing-mysql-dumps-made-on-64-bit-servers/</link><pubDate>Fri, 21 Mar 2008 17:51:56 +0000</pubDate><guid>https://major.io/2008/03/21/importing-mysql-dumps-made-on-64-bit-servers/</guid><description>It&amp;rsquo;s tough to find examples of dumps that can&amp;rsquo;t be properly reimported on other servers. However, if you have a 64-bit server, and you make a MySQL dump file from it, you may see this issue when importing the dump on a 32-bit MySQL server:
ERROR 1118 (42000) at line 1686: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. You have to change some columns to TEXT or BLOBs You really don&amp;rsquo;t have any options in this situation.</description></item><item><title>MySQLTuner v0.8.6 is now available</title><link>https://major.io/2008/02/26/mysqltuner-v086-is-now-available/</link><pubDate>Wed, 27 Feb 2008 03:24:52 +0000</pubDate><guid>https://major.io/2008/02/26/mysqltuner-v086-is-now-available/</guid><description>Version 0.8.6 of MySQLTuner is now available. It contains a few bug fixes and readability improvements:
Newlines are placed between the sections for increased readability
Each section now contains extra lines to set the sections apart. It makes the output a little longer, but easier to read as well.
Storage engine status color bug
Even if the -nocolor option was passed, the storage engine statuses were being shown in color.</description></item></channel></rss>