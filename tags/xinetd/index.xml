<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>xinetd on Major Hayden ðŸ¤ </title><link>https://major.io/tags/xinetd/</link><description>Recent content in xinetd on Major Hayden ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-sa/2.0/" target="_blank" rel="noopener">CC BY-SA 2.0&lt;/a></copyright><lastBuildDate>Wed, 03 Dec 2008 00:13:10 +0000</lastBuildDate><atom:link href="https://major.io/tags/xinetd/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple server monitoring with xinetd</title><link>https://major.io/2008/12/02/simple-server-monitoring-with-xinetd/</link><pubDate>Wed, 03 Dec 2008 00:13:10 +0000</pubDate><guid>https://major.io/2008/12/02/simple-server-monitoring-with-xinetd/</guid><description>You can use the simple but powerful xinetd on your Linux server to monitor almost anything on the server. Since xinetd just holds open a port and waits for a connection, you can tell it to run a script and return the output directly to the network stream.
To start, you&amp;rsquo;ll need a script which will return data to stdout. In this example, I&amp;rsquo;ll use a very simple script like the following:</description></item></channel></rss>