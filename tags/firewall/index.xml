<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>firewall on Major Hayden ü§†</title><link>https://major.io/tags/firewall/</link><description>Recent content in firewall on Major Hayden ü§†</description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-sa/2.0/" target="_blank" rel="noopener">CC BY-SA 2.0&lt;/a></copyright><lastBuildDate>Fri, 11 Sep 2015 21:08:44 +0000</lastBuildDate><atom:link href="https://major.io/tags/firewall/index.xml" rel="self" type="application/rss+xml"/><item><title>Time Warner Road Runner, Linux, and large IPv6 subnets</title><link>https://major.io/2015/09/11/time-warner-road-runner-linux-and-large-ipv6-subnets/</link><pubDate>Fri, 11 Sep 2015 21:08:44 +0000</pubDate><guid>https://major.io/2015/09/11/time-warner-road-runner-linux-and-large-ipv6-subnets/</guid><description>Although Time Warner Cable is now Spectrum and wide-dhcpv6 is quite old, this post is still what I&amp;rsquo;m using today (in 2019)!
I&amp;rsquo;ve written about how to get larger IPv6 subnets from Time Warner Cable&amp;rsquo;s Road Runner service on a Mikrotik router before, but I&amp;rsquo;ve converted to using a Linux server as my router for my home. Getting the larger /56 IPv6 subnet is a little tricky and it&amp;rsquo;s not terribly well documented.</description></item><item><title>Build a network router and firewall with Fedora 22 and systemd-networkd</title><link>https://major.io/2015/08/27/build-a-network-router-and-firewall-with-fedora-22-and-systemd-networkd/</link><pubDate>Thu, 27 Aug 2015 12:38:43 +0000</pubDate><guid>https://major.io/2015/08/27/build-a-network-router-and-firewall-with-fedora-22-and-systemd-networkd/</guid><description>This post originally appeared on the Fedora Magazine blog.
One of my favorite features of Fedora 22 is systemd-networkd and all of the new features that came with it in recent systemd versions. The configuration files are easy to read, bridging is simple, and tunnels are resilient.
I&amp;rsquo;ve recently started using a small Linux server at home again as a network router and firewall. However, I used systemd-networkd this time and had some great results.</description></item><item><title>Trust an IP address with firewalld‚Äôs rich rules</title><link>https://major.io/2014/11/24/trust-ip-address-firewallds-rich-rules/</link><pubDate>Mon, 24 Nov 2014 14:44:09 +0000</pubDate><guid>https://major.io/2014/11/24/trust-ip-address-firewallds-rich-rules/</guid><description>Managing firewall rules with iptables can be tricky at times. The rule syntax itself isn&amp;rsquo;t terribly difficult but you can quickly run into problems if you don&amp;rsquo;t save your rules to persistent storage after you get your firewall configured. Things can also get out of hand quickly if you run a lot of different tables with jumps scattered through each.
Why FirewallD? FirewallD&amp;rsquo;s goal is to make this process a bit easier by adding a daemon to the mix.</description></item><item><title>Securing your ssh server</title><link>https://major.io/2010/10/12/securing-your-ssh-server/</link><pubDate>Tue, 12 Oct 2010 22:39:15 +0000</pubDate><guid>https://major.io/2010/10/12/securing-your-ssh-server/</guid><description>One of the most common questions that I see in my favorite IRC channel is: ‚ÄúHow can I secure sshd on my server?‚Äù There&amp;rsquo;s no single right answer, but most systems administrators combine multiple techniques to provide as much security as possible with the least inconvenience to the end user.
Here are my favorite techniques listed from most effective to least effective:
SSH key pairs
By disabling password-based authentication and requiring ssh key pairs, you reduce the chances of compromise via a brute force attack.</description></item></channel></rss>