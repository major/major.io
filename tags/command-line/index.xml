<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>command line on Major Hayden's Blog ðŸ¤ </title><link>https://major.io/tags/command-line/</link><description>Recent content in command line on Major Hayden's Blog ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 20 Jan 2016 19:46:52 +0000</lastBuildDate><atom:link href="https://major.io/tags/command-line/index.xml" rel="self" type="application/rss+xml"/><item><title>Tinkering with systemdâ€™s predictable network names</title><link>https://major.io/2016/01/20/tinkering-with-systemds-predictable-network-names/</link><pubDate>Wed, 20 Jan 2016 19:46:52 +0000</pubDate><guid>https://major.io/2016/01/20/tinkering-with-systemds-predictable-network-names/</guid><description>I&amp;rsquo;ve talked about predictable network names (and seemingly unpredictable ones) on the blog before, but some readers asked me how they could alter the network naming to fit a particular situation. Oddly enough, my Supermicro 5028D-T4NT has a problem with predictable names and it&amp;rsquo;s a great example to use here.
The problem There&amp;rsquo;s plenty of detail in my post about the Supermicro 5028D-T4NT, but the basic gist is that something within the firmware is causing the all of the network cards in the server to show up as onboard.</description></item><item><title>GRE tunnels with systemd-networkd</title><link>https://major.io/2015/10/16/gre-tunnels-with-systemd-networkd/</link><pubDate>Fri, 16 Oct 2015 23:54:52 +0000</pubDate><guid>https://major.io/2015/10/16/gre-tunnels-with-systemd-networkd/</guid><description>Switching to systemd-networkd for managing your networking interfaces makes things quite a bit simpler over standard networking scripts or NetworkManager. Aside from being easier to configure, it uses fewer resources on your system, which can be handy for smaller virtual machines or containers.
Managing tunnels between interfaces is also easier with systemd-networkd. This post will show you how to set up a GRE tunnel between two hosts running systemd-networkd.
Getting started You&amp;rsquo;ll need two hosts running a recent version of systemd-networkd.</description></item><item><title>Chronicles of SELinux: Dealing with web content in unusual directories</title><link>https://major.io/2015/09/10/chronicles-of-selinux-dealing-with-web-content-in-unusual-directories/</link><pubDate>Thu, 10 Sep 2015 13:40:35 +0000</pubDate><guid>https://major.io/2015/09/10/chronicles-of-selinux-dealing-with-web-content-in-unusual-directories/</guid><description>I&amp;rsquo;ve decided to start a series of posts called &amp;ldquo;Chronicles of SELinux&amp;rdquo; where I hope to educate more users on how to handle SELinux denials with finesse rather than simply disabling it entirely. To kick things off, I&amp;rsquo;ll be talking about dealing with web content in the first post.
First steps If you&amp;rsquo;d like to follow along, simply hop onto a system running Fedora 21 (or later), CentOS 7 or Red Hat Enterprise Linux 7.</description></item><item><title>Understanding systemdâ€™s predictable network device names</title><link>https://major.io/2015/08/21/understanding-systemds-predictable-network-device-names/</link><pubDate>Fri, 21 Aug 2015 21:15:36 +0000</pubDate><guid>https://major.io/2015/08/21/understanding-systemds-predictable-network-device-names/</guid><description>I talked a bit about systemd&amp;rsquo;s network device name in my earlier post about systemd-networkd and bonding and I received some questions about how systemd rolls through the possible names of network devices to choose the final name. These predictable network device names threw me a curveball last summer when I couldn&amp;rsquo;t figure out how the names were constructed.
Let&amp;rsquo;s walk through this process.
What&amp;rsquo;s in a name? Back in the systemd-networkd bonding post, I dug into a dual port Intel network card that showed up in a hotplug slot:</description></item><item><title>Using systemd-networkd with bonding on Rackspaceâ€™s OnMetal servers</title><link>https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/</link><pubDate>Fri, 21 Aug 2015 14:00:46 +0000</pubDate><guid>https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/</guid><description>I&amp;rsquo;ve written about systemd-networkd in the past and how easy it can be to set up new network devices and tunnels. However, the documentation on systemd-networkd with bonding is a bit lacking (but I have a pull request pending for that).
Rackspace&amp;rsquo;s OnMetal Servers are a good place to test since they have bonded networks configured by default. They&amp;rsquo;re also quite fast and always fun for experiments.
To get started, head on over to the Rackspace Cloud control panel and build a compute-1 OnMetal server and choose Fedora 22 as your operating system.</description></item><item><title>Using ZoneMinder with a Logitech C270 webcam</title><link>https://major.io/2015/02/07/using-zoneminder-logitech-c270-webcam/</link><pubDate>Sun, 08 Feb 2015 04:04:08 +0000</pubDate><guid>https://major.io/2015/02/07/using-zoneminder-logitech-c270-webcam/</guid><description>For those of you in the market for a cheap webcam for videoconferencing or home surveillance, the Logitech C270 is hard to beat at about $20-25 USD. It can record video at 1280Ã—960 and it&amp;rsquo;s fairly good at low light levels. The white balance gets a bit off when it&amp;rsquo;s bright in the room but hey â€” this camera is cheap.
ZoneMinder can monitor multiple cameras connected via USB or network.</description></item><item><title>Try out LXC with an Ansible playbook</title><link>https://major.io/2014/12/17/try-lxc-ansible-playbook/</link><pubDate>Wed, 17 Dec 2014 13:50:26 +0000</pubDate><guid>https://major.io/2014/12/17/try-lxc-ansible-playbook/</guid><description>The world of containers is constantly evolving lately. The latest turn of events involves the CoreOS developers when they announced Rocket as an alternative to Docker. However, LXC still lingers as a very simple path to begin using containers.
When I talk to people about LXC, I often hear people talk about how difficult it is to get started with LXC. After all, Docker provides an easy-to-use image downloading function that allows you to spin up multiple different operating systems in Docker containers within a few minutes.</description></item><item><title>Install sysstat on Fedora 21</title><link>https://major.io/2014/12/12/install-sysstat-fedora-21/</link><pubDate>Fri, 12 Dec 2014 17:55:57 +0000</pubDate><guid>https://major.io/2014/12/12/install-sysstat-fedora-21/</guid><description>One of the first tools I learned about after working with Red Hat was sysstat. It can write down historical records about your server at regular intervals. This can help you diagnose CPU usage, RAM usage, or network usage problems. In addition, sysstat also provides some handy command line utilities like vmstat, iostat, and pidstat that give you a live view of what your system is doing.
On Debian-based systems (including Ubuntu), you install the sysstat package and enable it with a quick edit to /etc/default/sysstat and the cron job takes it from there.</description></item><item><title>Switching to systemd on Debian jessie</title><link>https://major.io/2014/05/20/switching-to-systemd-on-debian-jessie/</link><pubDate>Tue, 20 May 2014 13:47:33 +0000</pubDate><guid>https://major.io/2014/05/20/switching-to-systemd-on-debian-jessie/</guid><description>It seems like everyone is embracing systemd these days. It&amp;rsquo;s been in Fedora since 2011 and it&amp;rsquo;s already in the RHEL 7 release candidate. Arch Linux and Gentoo have it as well. Debian got on board with the jessie release (which is currently in testing).
Switching from old SysVinit to systemd in Debian jessie is quite simple. For the extremely cautious system administrators, you can follow Debian&amp;rsquo;s guide and test systemd before you make the full cutover.</description></item><item><title>Helpful Linux I/O stack diagram</title><link>https://major.io/2014/04/30/helpful-linux-io-stack-diagram/</link><pubDate>Wed, 30 Apr 2014 15:03:46 +0000</pubDate><guid>https://major.io/2014/04/30/helpful-linux-io-stack-diagram/</guid><description>During one of my regular trips to reddit, I stumbled upon an amazingly helpful Linux I/O stack diagram:
It&amp;rsquo;s quite comprehensive and it can really help if you&amp;rsquo;re digging through a bottleneck and you&amp;rsquo;re not quite sure where to look. The original diagram is available in multiple formats from Thomas Krenn&amp;rsquo;s website.
If you combine that with this slide from Brendan Gregg&amp;rsquo;s Linux Performance Analysis and Tools presentation from Scale 11x, you can attack performance problems with precision:</description></item><item><title>Learn octal file permissions easily with stat</title><link>https://major.io/2013/12/10/learn-octal-file-permissions-easily-with-stat/</link><pubDate>Tue, 10 Dec 2013 13:41:40 +0000</pubDate><guid>https://major.io/2013/12/10/learn-octal-file-permissions-easily-with-stat/</guid><description>My SANS classmates were learning how to set and recognize file permissions on a Linux server and we realized it would be helpful to display the octal value of the permissions next to the normal rwx display. Fortunately, a quick search revealed that stat could deliver this information:
# stat -c &amp;quot;%a %A %n&amp;quot; /usr/sbin/* | head 755 -rwxr-xr-x /usr/sbin/accessdb 755 -rwxr-xr-x /usr/sbin/acpid 755 -rwxr-xr-x /usr/sbin/addgnupghome 755 -rwxr-xr-x /usr/sbin/addpart 777 lrwxrwxrwx /usr/sbin/adduser 755 -rwxr-xr-x /usr/sbin/agetty 755 -rwxr-xr-x /usr/sbin/alternatives 755 -rwxr-xr-x /usr/sbin/anacron 755 -rwxr-xr-x /usr/sbin/apachectl 755 -rwxr-xr-x /usr/sbin/applygnupgdefaults The first octal digit (for setuid, setgid, and sticky) is left off for any files without those bits set.</description></item><item><title>Moving from OS X to Linux: Day One</title><link>https://major.io/2013/08/26/moving-from-os-x-to-linux-day-one/</link><pubDate>Tue, 27 Aug 2013 03:05:46 +0000</pubDate><guid>https://major.io/2013/08/26/moving-from-os-x-to-linux-day-one/</guid><description>The thought of using Linux as a manager in a highly Windows- and Mac-centric corporate environment isn&amp;rsquo;t something to be taken lightly. Integrating with Active Directory, wrangling email with Microsoft Exchange, and taming quirky Microsoft office documents can be a challenge even with a well-equipped Mac. I decided to make a change after using a Mac at Rackspace for six years.
Let&amp;rsquo;s get one thing straight: I&amp;rsquo;m not a Windows or Mac basher.</description></item><item><title>Boot VMâ€™s with virt-manager and libvirt with ISOâ€™s stored remotely via samba/cifs</title><link>https://major.io/2013/07/06/boot-vms-with-virt-manager-and-libvirt-with-isos-stored-remotely-via-sambacifs/</link><pubDate>Sun, 07 Jul 2013 01:51:10 +0000</pubDate><guid>https://major.io/2013/07/06/boot-vms-with-virt-manager-and-libvirt-with-isos-stored-remotely-via-sambacifs/</guid><description>Pairing virt-manager with KVM makes booting new VM&amp;rsquo;s pretty darned easy. I have a QNAP NAS at home with a bunch of ISO&amp;rsquo;s stored in share available to guests and I wanted to use that with libvirt to boot new VM&amp;rsquo;s. (By the way, if you&amp;rsquo;re looking for an off-the-shelf NAS that is built with solid hardware and pretty reliable software, try one of the QNAP devices. You still get access to many of the usual commands that you would normally find on a Linux box for emergencies.</description></item><item><title>Confine untrusted users (including your children) with SELinux</title><link>https://major.io/2013/07/05/confine-untrusted-users-including-your-children-with-selinux/</link><pubDate>Fri, 05 Jul 2013 18:50:43 +0000</pubDate><guid>https://major.io/2013/07/05/confine-untrusted-users-including-your-children-with-selinux/</guid><description>The confined user support in SELinux is handy for ensuring that users aren&amp;rsquo;t able to do something that they shouldn&amp;rsquo;t. It seems more effective and easier to use than most of the other methods I&amp;rsquo;ve seen before. Thanks to Dan for reminding me about this during his SELinux in the Enterprise talk from this year&amp;rsquo;s Red Hat Summit.
There are five main SELinux user types (and a handy chart in the Fedora documentation):</description></item><item><title>Supermicro X9SCI/X9SCA server does a shutdown rather than a reboot</title><link>https://major.io/2013/06/03/supermicro-x9scix9sca-server-does-a-shutdown-rather-than-a-reboot/</link><pubDate>Mon, 03 Jun 2013 14:45:34 +0000</pubDate><guid>https://major.io/2013/06/03/supermicro-x9scix9sca-server-does-a-shutdown-rather-than-a-reboot/</guid><description>Most of my websites run on a pair of Supermicro servers that I purchased from Silicon Mechanics (and I can&amp;rsquo;t say enough good things about them and their servers). One problem that kept cropping up was that the servers would become unresponsive during a reboot. If I issued the reboot command in Linux, the machine would begin the reboot process, power off, and remain powered off.
Needless to say, this is highly annoying.</description></item><item><title>Installing the Xen hypervisor on Fedora 19</title><link>https://major.io/2013/06/02/installing-the-xen-hypervisor-on-fedora-19/</link><pubDate>Mon, 03 Jun 2013 04:27:43 +0000</pubDate><guid>https://major.io/2013/06/02/installing-the-xen-hypervisor-on-fedora-19/</guid><description>It&amp;rsquo;s been a little while since I last posted about installing Xen on Fedora, so I figured that Fedora 19&amp;rsquo;s beta release was as good a time as any to write a new post. To get started, you&amp;rsquo;ll need to get Fedora 19 installed on your favorite hardware (or virtual machine).
Install the Xen hypervisor and tools. Also, ensure that both of the necessary daemons are running on each boot:</description></item><item><title>Presentation: Demystifying SELinux</title><link>https://major.io/2013/05/28/presentation-demystifying-selinux/</link><pubDate>Wed, 29 May 2013 01:01:09 +0000</pubDate><guid>https://major.io/2013/05/28/presentation-demystifying-selinux/</guid><description>While rolling through my RSS feeds, I found a great presentation by David Quigley titled &amp;ldquo;Demystifying SELinux&amp;rdquo;. He makes come good comparisons between discretionary/mandatory access controls and dives into what makes SELinux useful. Basic troubleshooting commands are covered within the presentation as well.
You can find the presentation over on Speaker Deck. I&amp;rsquo;ve also mirrored a PDF copy here on the site.
UPDATE: If you&amp;rsquo;re going to OSCON 2013 this year, it appears that David will be presenting this topic during the event.</description></item><item><title>Migrate KVM virtual machines from CentOS 6 to Fedora 18 without the luxury of shared storage</title><link>https://major.io/2013/05/22/migrate-kvm-virtual-machines-from-centos-6-to-fedora-18-without-the-luxury-of-shared-storage/</link><pubDate>Wed, 22 May 2013 15:15:36 +0000</pubDate><guid>https://major.io/2013/05/22/migrate-kvm-virtual-machines-from-centos-6-to-fedora-18-without-the-luxury-of-shared-storage/</guid><description>I&amp;rsquo;ve converted one of my KVM hypervisors from CentOS 6 to Fedora 18 and now comes the task of migrating my virtual machines off of my single remaining CentOS 6 hypervisor. This is definitely on a budget, so there&amp;rsquo;s no shared storage to make this process easier.
Here&amp;rsquo;s how I did it:
Migrate the logical volume
My first VM to migrate is my Fedora development VM where I build and test new packages.</description></item><item><title>Handling terminal color escape sequences in less</title><link>https://major.io/2013/05/21/handling-terminal-color-escape-sequences-in-less/</link><pubDate>Wed, 22 May 2013 02:33:00 +0000</pubDate><guid>https://major.io/2013/05/21/handling-terminal-color-escape-sequences-in-less/</guid><description>This post is a quick one but I wanted to share it since I taught it to someone new today. When you have bash output with colors, less doesn&amp;rsquo;t handle the color codes properly by default:
$ colordiff chunk/functions.php chunk-old/functions.php | less ESC[0;32m22a23,27ESC[0;0m ESC[0;34m&amp;gt; * Load up our functions for grabbing content from postsESC[0;0m ESC[0;34m&amp;gt; */ESC[0;0m ESC[0;34m&amp;gt; require( get_template_directory() . '/content-grabbers.php' );ESC[0;0m ESC[0;34m&amp;gt; ESC[0;0m Toss in the -R flag and you&amp;rsquo;ll be able to see the colors properly (no colors to see here, but use your imagination):</description></item><item><title>Changing your ssh serverâ€™s port from the default: Is it worth it?</title><link>https://major.io/2013/05/14/changing-your-ssh-servers-port-from-the-default-is-it-worth-it/</link><pubDate>Wed, 15 May 2013 04:43:41 +0000</pubDate><guid>https://major.io/2013/05/14/changing-your-ssh-servers-port-from-the-default-is-it-worth-it/</guid><description>Changing my ssh port from the default port (22) has been one of my standard processes for quite some time when I build new servers or virtual machines. However, I see arguments crop up regularly about it (like this reddit thread or this other one).
Before I go any further, let&amp;rsquo;s settle the &amp;ldquo;security through obscurity&amp;rdquo; argument. (This could probably turn into its own post but I&amp;rsquo;ll be brief for now.</description></item><item><title>Limit access to the su command</title><link>https://major.io/2013/04/25/limit-access-to-the-su-command/</link><pubDate>Fri, 26 Apr 2013 04:05:46 +0000</pubDate><guid>https://major.io/2013/04/25/limit-access-to-the-su-command/</guid><description>The wheel group exists for a critical purpose and Wikipedia has a concise definition:
In computing, the term wheel refers to a user account with a wheel bit, a system setting that provides additional special system privileges that empower a user to execute restricted commands that ordinary user accounts cannot access. The term is derived from the slang phrase big wheel, referring to a person with great power or influence.</description></item><item><title>Seriously, stop disabling SELinux</title><link>https://major.io/2013/04/15/seriously-stop-disabling-selinux/</link><pubDate>Tue, 16 Apr 2013 04:40:10 +0000</pubDate><guid>https://major.io/2013/04/15/seriously-stop-disabling-selinux/</guid><description>After many discussions with fellow Linux users, I&amp;rsquo;ve come to realize that most seem to disable SELinux rather than understand why it&amp;rsquo;s denying access. In an effort to turn the tide, I&amp;rsquo;ve created a new site as a public service to SELinux cowards everywhere: stopdisablingselinux.com.
Here are some relatively useful SELinux posts from the blog:
Getting started with SELinux Receive email reports for SELinux AVC denials Edit: The goal of the post was to poke some fun at system administrators who disable SELinux immediately without learning how it works or why they&amp;rsquo;re seeing certain operations being denied.</description></item><item><title>Late night virtualization frustration with kvm</title><link>https://major.io/2013/03/20/late-night-virtualization-frustration-with-kvm/</link><pubDate>Wed, 20 Mar 2013 05:07:21 +0000</pubDate><guid>https://major.io/2013/03/20/late-night-virtualization-frustration-with-kvm/</guid><description>I dragged out an old Aopen MP57-D tonight that was just sitting in the closet and decided to load up kvm on Fedora 18. I soon found myself staring at a very brief error message upon bootup:
kvm: disabled by bios After a reboot, the BIOS screen was up and I saw that Virtualization and VT-d were both enabled. Trusted execution (TXT) was disabled, so I enabled it for kicks and rebooted.</description></item><item><title>New icanhaz features: reverse DNS and traceroutes</title><link>https://major.io/2013/03/16/new-icanhaz-features-reverse-dns-and-traceroutes/</link><pubDate>Sun, 17 Mar 2013 03:13:53 +0000</pubDate><guid>https://major.io/2013/03/16/new-icanhaz-features-reverse-dns-and-traceroutes/</guid><description>After adding some upgrades for icanhazip.com, I wanted to go a bit further. Adding reverse DNS (PTR) lookups and traceroutes seemed like a decent idea!
Want to beta test some new features on icanhazptr.com and icanhaztrace.com? Give them a try!
Getting your reverse DNS entry is easy:
$ curl -4 icanhazptr.com ord.icanhazip.com $ curl -6 icanhazptr.com ord.icanhazip.com Traceroutes are straightforward as well:
$ curl -4 icanhaztrace.com traceroute to 166.78.118.193 (166.78.118.193), 30 hops max, 60 byte packets 1 212.</description></item><item><title>Building vpnc with openssl support via MacPorts on Mac OS X</title><link>https://major.io/2012/07/31/building-vpnc-with-openssl-support-via-macports-on-mac-os-x/</link><pubDate>Wed, 01 Aug 2012 04:16:09 +0000</pubDate><guid>https://major.io/2012/07/31/building-vpnc-with-openssl-support-via-macports-on-mac-os-x/</guid><description>If you install vpnc via MacPorts on OS X, you&amp;rsquo;ll find that you have no openssl support after it&amp;rsquo;s built:
$ sudo port install vpnc ---&amp;gt; Computing dependencies for vpnc ---&amp;gt; Cleaning vpnc ---&amp;gt; Scanning binaries for linking errors: 100.0% ---&amp;gt; No broken files found. $ sudo vpnc vpnc was built without openssl: Can't do hybrid or cert mode. This will cause some problems if you&amp;rsquo;re trying to use VPN with a Cisco VPN concentrator which uses SSL VPN technology.</description></item></channel></rss>