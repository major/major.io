<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web on Major Hayden's Blog 🤠</title><link>https://major.io/tags/web/</link><description>Recent content in web on Major Hayden's Blog 🤠</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 25 May 2016 03:17:35 +0000</lastBuildDate><atom:link href="https://major.io/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Test Fedora 24 Beta in an OpenStack cloud</title><link>https://major.io/2016/05/24/test-fedora-24-beta-openstack-cloud/</link><pubDate>Wed, 25 May 2016 03:17:35 +0000</pubDate><guid>https://major.io/2016/05/24/test-fedora-24-beta-openstack-cloud/</guid><description>Although there are a few weeks remaining before Fedora 24 is released, you can test out the Fedora 24 Beta release today! This is a great way to get a sneak peek at new features and help find bugs that still need a fix.
The Fedora Cloud image is available for download from your favorite local mirror or directly from Fedora&amp;rsquo;s servers. In this post, I&amp;rsquo;ll show you how to import this image into an OpenStack environment and begin testing Fedora 24 Beta.</description></item><item><title>Automated Let’s Encrypt DNS challenges with Rackspace Cloud DNS</title><link>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</link><pubDate>Thu, 31 Mar 2016 19:39:50 +0000</pubDate><guid>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</guid><description>Let&amp;rsquo;s Encrypt has taken the world by storm by providing free SSL certificates that can be renewed via automated methods. They have issued over 1.4 million certificates since launch in the fall of 2015.
If you are not familiar with how Let&amp;rsquo;s Encrypt operates, here is an extremely simple explanation:
Create a private key Make a request for a new certificate Complete the challenge process You have a certificate! That is highly simplified, but there is plenty of detail available on how the whole system works.</description></item><item><title>Chronicles of SELinux: Dealing with web content in unusual directories</title><link>https://major.io/2015/09/10/chronicles-of-selinux-dealing-with-web-content-in-unusual-directories/</link><pubDate>Thu, 10 Sep 2015 13:40:35 +0000</pubDate><guid>https://major.io/2015/09/10/chronicles-of-selinux-dealing-with-web-content-in-unusual-directories/</guid><description>I&amp;rsquo;ve decided to start a series of posts called &amp;ldquo;Chronicles of SELinux&amp;rdquo; where I hope to educate more users on how to handle SELinux denials with finesse rather than simply disabling it entirely. To kick things off, I&amp;rsquo;ll be talking about dealing with web content in the first post.
First steps If you&amp;rsquo;d like to follow along, simply hop onto a system running Fedora 21 (or later), CentOS 7 or Red Hat Enterprise Linux 7.</description></item><item><title>Using ZoneMinder with a Logitech C270 webcam</title><link>https://major.io/2015/02/07/using-zoneminder-logitech-c270-webcam/</link><pubDate>Sun, 08 Feb 2015 04:04:08 +0000</pubDate><guid>https://major.io/2015/02/07/using-zoneminder-logitech-c270-webcam/</guid><description>For those of you in the market for a cheap webcam for videoconferencing or home surveillance, the Logitech C270 is hard to beat at about $20-25 USD. It can record video at 1280×960 and it&amp;rsquo;s fairly good at low light levels. The white balance gets a bit off when it&amp;rsquo;s bright in the room but hey — this camera is cheap.
ZoneMinder can monitor multiple cameras connected via USB or network.</description></item><item><title>Docker, trusted builds, and Fedora 20</title><link>https://major.io/2014/03/26/docker-trusted-builds-and-fedora-20/</link><pubDate>Wed, 26 Mar 2014 05:17:58 +0000</pubDate><guid>https://major.io/2014/03/26/docker-trusted-builds-and-fedora-20/</guid><description>Docker is a hot topic in the Linux world at the moment and I decided to try out the new trusted build process. Long story short, you put your Dockerfile along with any additional content into your GitHub repository, link your GitHub account with Docker, and then fire off a build. The Docker index labels it as &amp;ldquo;trusted&amp;rdquo; since it was build from source files in your repository.
I set off to build a Dockerfile to provision a container that would run all of the icanhazip services.</description></item><item><title>Guide to securing apache</title><link>https://major.io/2013/10/22/guide-to-securing-apache/</link><pubDate>Tue, 22 Oct 2013 12:30:51 +0000</pubDate><guid>https://major.io/2013/10/22/guide-to-securing-apache/</guid><description>I stumbled upon a helpful guide to securing an apache server via Reddit&amp;rsquo;s /r/netsec subreddit. Without further ado, here&amp;rsquo;s a link to the guide:
Apache web server hardening &amp;amp; security guide The guide covers the simplest changes, like reducing ServerTokens output and eliminating indexes, all the way up through configuring mod_security and using the SpiderLabs GitHub repository to add additional rules.
If you&amp;rsquo;d like a more in-depth post about installing mod_security, I&amp;rsquo;d recommend this one from Tecmint.</description></item><item><title>Changing your ssh server’s port from the default: Is it worth it?</title><link>https://major.io/2013/05/14/changing-your-ssh-servers-port-from-the-default-is-it-worth-it/</link><pubDate>Wed, 15 May 2013 04:43:41 +0000</pubDate><guid>https://major.io/2013/05/14/changing-your-ssh-servers-port-from-the-default-is-it-worth-it/</guid><description>Changing my ssh port from the default port (22) has been one of my standard processes for quite some time when I build new servers or virtual machines. However, I see arguments crop up regularly about it (like this reddit thread or this other one).
Before I go any further, let&amp;rsquo;s settle the &amp;ldquo;security through obscurity&amp;rdquo; argument. (This could probably turn into its own post but I&amp;rsquo;ll be brief for now.</description></item><item><title>Survive the Google Reader exodus with Tiny Tiny RSS</title><link>https://major.io/2013/03/17/survive-the-google-reader-exodus-with-tiny-tiny-rss/</link><pubDate>Sun, 17 Mar 2013 21:27:38 +0000</pubDate><guid>https://major.io/2013/03/17/survive-the-google-reader-exodus-with-tiny-tiny-rss/</guid><description>It&amp;rsquo;s no secret that Google Reader is a popular way to keep up with your RSS feeds, but it&amp;rsquo;s getting shelved later this year. Most folks suggested Feedly as a replacement but I found the UI quite clunky in a browser and on Android devices.
Then someone suggested Tiny Tiny RSS. I couldn&amp;rsquo;t learn more about it on the day Google Reader&amp;rsquo;s shutdown was announced because the site was slammed. In a nutshell, Tiny Tiny RSS is a well-written web UI for managing feeds and a handy API for using it with mobile applications.</description></item><item><title>Performance and redundancy boost for icanhazip.com</title><link>https://major.io/2012/04/18/performance-and-redundancy-boost-for-icanhazip-com/</link><pubDate>Wed, 18 Apr 2012 23:30:06 +0000</pubDate><guid>https://major.io/2012/04/18/performance-and-redundancy-boost-for-icanhazip-com/</guid><description>It&amp;rsquo;s been a few years since I started a little project to operate a service to return your IPv4 and IPv6 address. Although there are a bunch of other sites that offer this service as well, I&amp;rsquo;ve been amazed by the gradually increasing traffic to icanhazip.com.
Here&amp;rsquo;s a sample of the latest statistics:
Hits per day: 1.8 million (about 21 hits/second) Unique IP addresses per day: 25,555 Hits per day from IPv6 addresses: 1,069 (a little sad) Bandwidth used per day: ~ 400MB The site is now running on multiple Cloud Servers at Rackspace behind a load balancer cluster.</description></item><item><title>mysql-json-bridge: a simple JSON API for MySQL</title><link>https://major.io/2012/03/28/mysql-json-bridge-a-simple-json-api-for-mysql/</link><pubDate>Thu, 29 Mar 2012 02:34:53 +0000</pubDate><guid>https://major.io/2012/03/28/mysql-json-bridge-a-simple-json-api-for-mysql/</guid><description>My quest to get better at Python led me to create a new project on GitHub. It&amp;rsquo;s called mysql-json-bridge and it&amp;rsquo;s ready for you to use.
Why do we need a JSON API for MySQL?
The real need sprang from a situation I was facing daily at Rackspace. We have a lot of production and pre-production environments which are in flux but we need a way to query data from various MySQL servers for multiple purposes.</description></item><item><title>Five years of rackerhacker.com</title><link>https://major.io/2012/02/14/five-years-of-rackerhacker-com/</link><pubDate>Tue, 14 Feb 2012 14:45:43 +0000</pubDate><guid>https://major.io/2012/02/14/five-years-of-rackerhacker-com/</guid><description>Today marks the fifth year that this blog has existed on the internet. I bought the domain on February 14th, 2007 and tossed together a quick WordPress installation (I can&amp;rsquo;t even remember the version now!) to hold my notes that I was gathering at work.
Rackspace as an entry-level Linux system administrator. The abrupt change from &amp;ldquo;top dog at the startup&amp;rdquo; to &amp;ldquo;wow, I don&amp;rsquo;t know anything about Linux&amp;rdquo; caught me by surprise and I was trying to stuff as much knowledge into my brain as quickly as I could.</description></item><item><title>Using OpenSSL’s s_client command with web servers using Server Name Indication (SNI)</title><link>https://major.io/2012/02/07/using-openssls-s_client-command-with-web-servers-using-server-name-indication-sni/</link><pubDate>Tue, 07 Feb 2012 14:07:41 +0000</pubDate><guid>https://major.io/2012/02/07/using-openssls-s_client-command-with-web-servers-using-server-name-indication-sni/</guid><description>One of the handiest tools in the OpenSSL toolbox is s_client. You can quickly view lots of details about the SSL certificates installed on a particular server and diagnose problems. For example, use this command to look at Google&amp;rsquo;s SSL certificates:
openssl s_client -connect encrypted.google.com:443 You&amp;rsquo;ll see the chain of certificates back to the original certificate authority where Google bought its certificate at the top, a copy of their SSL certificate in plain text in the middle, and a bunch of session-related information at the bottom.</description></item><item><title>OpenStack bleeding-edge Python packages are now available</title><link>https://major.io/2012/02/01/openstack-bleeding-edge-python-packages-are-now-available/</link><pubDate>Wed, 01 Feb 2012 15:05:16 +0000</pubDate><guid>https://major.io/2012/02/01/openstack-bleeding-edge-python-packages-are-now-available/</guid><description>I sometimes enjoy living on the edge occasionally and that sometimes means I keep up with OpenStack changes commit by commit. If you&amp;rsquo;re in the same boat as I am, you may save some time by using my repository of bleeding-edge Python packages from the OpenStack projects:
pypi.mhtx.net Python packages are updated moments after the commit is merged into the repositories under OpenStack&amp;rsquo;s github account.
Although the packages will contain the latest code available, rest assured that the code has passed an initial code review (by humans), unit tests, and varying levels of functional or integrated testing.</description></item><item><title>Lifehacker effect on icanhazip.com</title><link>https://major.io/2011/03/30/lifehacker-effect-on-icanhazip-com/</link><pubDate>Wed, 30 Mar 2011 13:28:55 +0000</pubDate><guid>https://major.io/2011/03/30/lifehacker-effect-on-icanhazip-com/</guid><description>I was surprised to see coverage about icanhazip.com on Lifehacker last Sunday and I was curious to know what effect the story would have on my site&amp;rsquo;s overall traffic. Dave Drager wrote a great summary of what the site offers and how people can use it in their daily work. It&amp;rsquo;s pretty obvious that icanhazip.com really only serves a niche group of internet users, but even I was surprised at the level of interest.</description></item><item><title>Throwing thoughtful “403 Forbidden” responses with apache</title><link>https://major.io/2010/11/17/throwing-thoughtful-403-forbidden-responses-with-apache/</link><pubDate>Wed, 17 Nov 2010 13:47:19 +0000</pubDate><guid>https://major.io/2010/11/17/throwing-thoughtful-403-forbidden-responses-with-apache/</guid><description>If you offer a web service that users query via scripts or other applications, you&amp;rsquo;ll probably find that some people will begin to abuse the service. My icanhazip.com site is no exception.
While many of the users have reasonable usage patterns, there are some users that query the site more than once per second from the same IP address. If you haven&amp;rsquo;t used the site before, all it does is return your public IP address in plain text.</description></item><item><title>Switching from GlusterFS to DRBD and OCFS2</title><link>https://major.io/2010/11/10/switching-from-glusterfs-to-drbd-and-ocfs2/</link><pubDate>Wed, 10 Nov 2010 13:55:50 +0000</pubDate><guid>https://major.io/2010/11/10/switching-from-glusterfs-to-drbd-and-ocfs2/</guid><description>As my uptime reports have shown, and as some of you have reported, my blog&amp;rsquo;s load time has increased steadily over the past few weeks. It turns out that one of my VM&amp;rsquo;s was on a physical machine that had some trouble and I was reaching a point where GlusterFS&amp;rsquo;s replicate functionality couldn&amp;rsquo;t meet my performance needs.
Instead of using GlusterFS as I had before in my redundant cloud hosting guide, I decided to use DRBD in dual-primary mode with OCFS2 as the clustering filesystem on top of it.</description></item><item><title>One month with GlusterFS in production</title><link>https://major.io/2010/08/11/one-month-with-glusterfs-in-production/</link><pubDate>Wed, 11 Aug 2010 13:29:02 +0000</pubDate><guid>https://major.io/2010/08/11/one-month-with-glusterfs-in-production/</guid><description>As many of you might have noticed from my previous GlusterFS blog post and my various tweets, I&amp;rsquo;ve been working with GlusterFS in production for my personal hosting needs for just over a month. I&amp;rsquo;ve also been learning quite a bit from some of the folks in the #gluster channel on Freenode. On a few occasions I&amp;rsquo;ve even been able to help out with some configuration problems from other users.</description></item><item><title>A modern implementation and explanation of Linux Virtual Server (LVS)</title><link>https://major.io/2010/06/27/modern-implementation-and-explanation-of-linux-virtual-server-lvs/</link><pubDate>Sun, 27 Jun 2010 16:03:27 +0000</pubDate><guid>https://major.io/2010/06/27/modern-implementation-and-explanation-of-linux-virtual-server-lvs/</guid><description>Typical configuration for a proxy-type load balancer
A typical load balancing configuration using hardware devices or software implementations will be organized such that they resemble the diagram at the right. I usually call this a proxy-type load balancing solution since the load balancer proxies your request to some other nodes. The standard order of operations looks like this:
client makes a request load balancer receives the request load balancer sends request to a web node the web server sends content back to the load balancer the load balancer responds to the client If you&amp;rsquo;re not familiar with load balancing, here&amp;rsquo;s an analogy.</description></item><item><title>Apache 2.2: internal dummy connection</title><link>https://major.io/2008/09/23/apache-22-internal-dummy-connection/</link><pubDate>Wed, 24 Sep 2008 01:42:21 +0000</pubDate><guid>https://major.io/2008/09/23/apache-22-internal-dummy-connection/</guid><description>After working with some RHEL 5 servers fairly regularly, I noticed a reduction in Apache 2.2 performance when many connections were made to the server. There were messages like these streaming into the access_log as well:
127.0.0.1 - - [21/Aug/2008:12:00:10 -0400] &amp;quot;GET / HTTP/1.0&amp;quot; 200 2269 &amp;quot;-&amp;quot; &amp;quot;Apache/2.2.3 (Red Hat) (internal dummy connection)&amp;quot;&amp;lt;br /&amp;gt; 127.0.0.1 - - [21/Aug/2008:12:00:11 -0400] &amp;quot;GET / HTTP/1.0&amp;quot; 200 2269 &amp;quot;-&amp;quot; &amp;quot;Apache/2.2.3 (Red Hat) (internal dummy connection)&amp;quot;&amp;lt;br /&amp;gt; 127.</description></item><item><title>Compress your web content for better performance</title><link>https://major.io/2008/09/19/compress-your-web-content-for-better-performance/</link><pubDate>Fri, 19 Sep 2008 17:00:47 +0000</pubDate><guid>https://major.io/2008/09/19/compress-your-web-content-for-better-performance/</guid><description>Most web developers expend a lot of energy optimizing queries, reducing the overhead of functions, and streamlining their application&amp;rsquo;s overall flow. However, many forget that one of the simplest adjustments is the compression of data as it leaves the web server.
Luckily, mod_deflate makes this easy, and the Apache documentation has a handy initial configuration available:
&amp;lt;Location /&amp;gt; SetOutputFilter DEFLATE BrowserMatch ^Mozilla/4 gzip-only-text/html BrowserMatch ^Mozilla/4\.0[678] no-gzip BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html SetEnvIfNoCase Request_URI \.</description></item><item><title>Plesk: Disabling TRACE/TRACK methods globally</title><link>https://major.io/2008/04/23/plesk-disabling-tracetrack-methods-globally/</link><pubDate>Wed, 23 Apr 2008 23:40:50 +0000</pubDate><guid>https://major.io/2008/04/23/plesk-disabling-tracetrack-methods-globally/</guid><description>UPDATE: The TRACE/TRACK methods are disabled in Plesk 8.4 right out of the box!
It&amp;rsquo;s always been a bit of a challenge to disable TRACE and TRACK methods with Plesk. The only available options were to create a ton of vhost.conf files or adjust the httpd.include files and prevent modifications with chattr (which is a bad idea on many levels).
Luckily, Parallels has made things easier with a new knowledge base article.</description></item><item><title>Removing news feeds in Horde</title><link>https://major.io/2008/01/21/removing-news-feeds-in-horde/</link><pubDate>Mon, 21 Jan 2008 18:36:49 +0000</pubDate><guid>https://major.io/2008/01/21/removing-news-feeds-in-horde/</guid><description>If you&amp;rsquo;ve used newer versions of Horde with Plesk, you have probably noticed the news feed that runs down the left side of the screen. Depending on the types of e-mails you receive, you may get some pretty odd news popping up on the screen.
Luckily, you can remove the news feeds pretty easily. Open the following file in your favorite text editor:
/usr/share/psa-horde/templates/portal/sidebar.inc
Once the file is open, drop down to line 102 and comment out the entire if() statement (lines 102-117).</description></item><item><title>Why you should use caching for WordPress blogs</title><link>https://major.io/2007/12/06/why-you-should-use-caching-for-wordpress-blogs/</link><pubDate>Thu, 06 Dec 2007 18:09:42 +0000</pubDate><guid>https://major.io/2007/12/06/why-you-should-use-caching-for-wordpress-blogs/</guid><description>I had some time to do some testing of my blog&amp;rsquo;s performance today, and I discovered how much of a difference the WP-Cache plugin makes.
This blog runs on a server with dual Xeon Woodcrest CPU&amp;rsquo;s, 64-bit CentOS 4.5 and a 100mbit network connection. Here&amp;rsquo;s the first test with WP-Cache turned off:
$ http_load -parallel 10 -seconds 30 urltocheck.txt &amp;lt;strong&amp;gt;346&amp;lt;/strong&amp;gt; fetches, 10 max parallel, 1.78616e+07 bytes, in 30 seconds 51623.2 mean bytes/connection 11.</description></item><item><title>Fixing Horde problems in Plesk 8.1.x/8.2.x with PHP 5.2.5</title><link>https://major.io/2007/11/28/fixing-horde-problems-in-plesk-81x82x-with-php-525/</link><pubDate>Wed, 28 Nov 2007 18:33:37 +0000</pubDate><guid>https://major.io/2007/11/28/fixing-horde-problems-in-plesk-81x82x-with-php-525/</guid><description>There&amp;rsquo;s a few issues with PHP 5.2.5 and the version of Horde that is bundled with Plesk 8.1.x and 8.2.x. The PHP include paths that appear in the Apache configuration generated by Plesk conflict with the PHP installation, and that causes the Horde webmail interface to segmentation fault.
To fix the problem, create a file called /etc/httpd/conf.d/zz050a_horde_php_workaround.conf and put the following inside it:
&amp;lt;DirectoryMatch /usr/share/psa-horde&amp;gt; php_admin_value include_path &amp;#34;/usr/share/psa-horde/lib:/usr/share/psa-horde:/usr/share/psa-horde/pear:.&amp;#34; &amp;lt;/DirectoryMatch&amp;gt; Reload the Apache configuration and your Horde installation should work properly with PHP 5.</description></item><item><title>Red Hat Perl Issues: unable to call function somefunction on undefined value</title><link>https://major.io/2007/11/19/red-hat-perl-issues-unable-to-call-function-somefunction-on-undefined-value/</link><pubDate>Mon, 19 Nov 2007 18:19:12 +0000</pubDate><guid>https://major.io/2007/11/19/red-hat-perl-issues-unable-to-call-function-somefunction-on-undefined-value/</guid><description>Apparently, a recent Red Hat Enterprise Linux update for ES3, 4 and 5 caused some Perl applications to throw errors like these:
unable to call function somefunction on undefined value Of course, replace somefunction with your function of choice. To correct the issue, you can force CPAN to bring back a more sane version of Scalar::Util:
# perl -MCPAN -e shell cpan&amp;gt; force install Scalar::Util</description></item></channel></rss>