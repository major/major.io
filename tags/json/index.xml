<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>json on Major Hayden ðŸ¤ </title><link>https://major.io/tags/json/</link><description>Recent content in json on Major Hayden ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-sa/2.0/" target="_blank" rel="noopener">CC BY-SA 2.0&lt;/a></copyright><lastBuildDate>Fri, 21 Aug 2015 14:00:46 +0000</lastBuildDate><atom:link href="https://major.io/tags/json/index.xml" rel="self" type="application/rss+xml"/><item><title>Using systemd-networkd with bonding on Rackspaceâ€™s OnMetal servers</title><link>https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/</link><pubDate>Fri, 21 Aug 2015 14:00:46 +0000</pubDate><guid>https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/</guid><description>I&amp;rsquo;ve written about systemd-networkd in the past and how easy it can be to set up new network devices and tunnels. However, the documentation on systemd-networkd with bonding is a bit lacking (but I have a pull request pending for that).
Rackspace&amp;rsquo;s OnMetal Servers are a good place to test since they have bonded networks configured by default. They&amp;rsquo;re also quite fast and always fun for experiments.
To get started, head on over to the Rackspace Cloud control panel and build a compute-1 OnMetal server and choose Fedora 22 as your operating system.</description></item><item><title>mysql-json-bridge: a simple JSON API for MySQL</title><link>https://major.io/2012/03/28/mysql-json-bridge-a-simple-json-api-for-mysql/</link><pubDate>Thu, 29 Mar 2012 02:34:53 +0000</pubDate><guid>https://major.io/2012/03/28/mysql-json-bridge-a-simple-json-api-for-mysql/</guid><description>My quest to get better at Python led me to create a new project on GitHub. It&amp;rsquo;s called mysql-json-bridge and it&amp;rsquo;s ready for you to use.
Why do we need a JSON API for MySQL?
The real need sprang from a situation I was facing daily at Rackspace. We have a lot of production and pre-production environments which are in flux but we need a way to query data from various MySQL servers for multiple purposes.</description></item></channel></rss>