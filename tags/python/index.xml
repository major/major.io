<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Major Hayden's Blog ðŸ¤ </title><link>https://major.io/tags/python/</link><description>Recent content in python on Major Hayden's Blog ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 15 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://major.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Efficient emojis with rofimoji</title><link>https://major.io/2021/05/15/efficient-emojis-with-rofimoji/</link><pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate><guid>https://major.io/2021/05/15/efficient-emojis-with-rofimoji/</guid><description>Emojis brighten up any message or document. They also serve as excellent methods for testing whether your application handles strings appropriately. (This can be a lot of fun.) ðŸ¤­
I constantly obsess with efficiency and shortening the time and effort required to get my work done. I noticed that I could type short text emoticons like :) and ;) so much faster than I could use emojis. This simply would not do.</description></item><item><title>Changes in RHEL 7 Security Technical Implementation Guide Version 1, Release 3</title><link>https://major.io/2017/11/02/changes-in-rhel-7-security-technical-implementation-guide-version-1-release-3/</link><pubDate>Thu, 02 Nov 2017 15:00:25 +0000</pubDate><guid>https://major.io/2017/11/02/changes-in-rhel-7-security-technical-implementation-guide-version-1-release-3/</guid><description>The latest release of the Red Hat Enterprise Linux Security Technical Implementation Guide (STIG) was published last week. This release is Version 1, Release 3, and it contains four main changes:
V-77819 - Multifactor authentication is required for graphical logins V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled V-77823 - Single user mode must require user authentication V-77825 - Address space layout randomization (ASLR) must be enabled Deep dive Let&amp;rsquo;s break down this list to understand what each one means.</description></item><item><title>Fixing OpenStack noVNC consoles that ignore keyboard input</title><link>https://major.io/2017/05/18/fixing-openstack-novnc-consoles-that-ignore-keyboard-input/</link><pubDate>Thu, 18 May 2017 16:58:56 +0000</pubDate><guid>https://major.io/2017/05/18/fixing-openstack-novnc-consoles-that-ignore-keyboard-input/</guid><description>I opened up a noVNC console to a virtual machine today in my OpenStack cloud but found that the console wouldn&amp;rsquo;t take keyboard input. The Send Ctrl-Alt-Del button in the top right of the window worked just fine, but I couldn&amp;rsquo;t type anywhere in the console. This happened on an Ocata OpenStack cloud deployed with OpenStack-Ansible on CentOS 7.
Test the network path The network path to the console is a little deep for this deployment, but here&amp;rsquo;s a quick explanation:</description></item><item><title>OpenStack Summit Boston 2017 Recap</title><link>https://major.io/2017/05/11/openstack-summit-boston-2017-recap/</link><pubDate>Fri, 12 May 2017 00:25:55 +0000</pubDate><guid>https://major.io/2017/05/11/openstack-summit-boston-2017-recap/</guid><description>The OpenStack Summit wrapped up today in Boston and it was a great week! There were plenty of informative breakouts and some interesting keynotes.
Keynotes Beth Cohen shared some of the work that Verizon has done with software-defined WAN on customer-premises equipment (CPE). She showed a demo of how customers could easily provision virtual network hardware, such as firewalls or intrusion detection systems, without waiting for hardware or cabling changes. I&amp;rsquo;m less familiar with the world of telcos, so I found this really interesting.</description></item><item><title>RHEL 7 STIG v1 updates for openstack-ansible-security</title><link>https://major.io/2017/04/05/rhel-7-stig-v1-updates-for-openstack-ansible-security/</link><pubDate>Wed, 05 Apr 2017 17:46:17 +0000</pubDate><guid>https://major.io/2017/04/05/rhel-7-stig-v1-updates-for-openstack-ansible-security/</guid><description>DISA&amp;rsquo;s final release of the Red Hat Enterprise Linux (RHEL) 7 Security Technical Implementation Guide (STIG) came out a few weeks ago and it has plenty of improvements and changes. The openstack-ansible-security role has already been updated with these changes.
Quite a few duplicated STIG controls were removed and a few new ones were added. Some of the controls in the pre-release were difficult to implement, especially those that changed parameters for PKI-based authentication.</description></item><item><title>Whatâ€™s Happening in OpenStack-Ansible (WHOA) â€“ September 2016</title><link>https://major.io/2016/09/30/whats-happening-in-openstack-ansible-whoa-september-2016/</link><pubDate>Fri, 30 Sep 2016 14:33:33 +0000</pubDate><guid>https://major.io/2016/09/30/whats-happening-in-openstack-ansible-whoa-september-2016/</guid><description>Welcome to the fourth post in the series of What&amp;rsquo;s Happening in OpenStack-Ansible (WHOA) posts that I&amp;rsquo;m assembling each month. OpenStack-Ansible is a flexible framework for deploying enterprise-grade OpenStack clouds. In fact, I use OpenStack-Ansible to deploy the OpenStack cloud underneath the virtual machine that runs this blog!
My goal with these posts is to inform more people about what we&amp;rsquo;re doing in the OpenStack-Ansible community and bring on more contributors to the project.</description></item><item><title>Power 8 to the people</title><link>https://major.io/2016/09/21/power-8-to-the-people/</link><pubDate>Thu, 22 Sep 2016 00:00:21 +0000</pubDate><guid>https://major.io/2016/09/21/power-8-to-the-people/</guid><description>IBM Edge 2016 is almost over and I&amp;rsquo;ve learned a lot about Power 8 this week. I&amp;rsquo;ve talked about some of the learnings in my recaps of days one and two. The performance arguments sound really interesting and some of the choices in AIX&amp;rsquo;s design seem to make a lot of sense.
However, there&amp;rsquo;s one remaining barrier for me: Power 8 isn&amp;rsquo;t really accessible for a tinkerer.
Tinkering? Google defines tinkering as:</description></item><item><title>Whatâ€™s Happening in OpenStack-Ansible (WHOA) â€“ August 2016</title><link>https://major.io/2016/08/23/whats-happening-in-openstack-ansible-whoa-august-2016/</link><pubDate>Tue, 23 Aug 2016 20:35:19 +0000</pubDate><guid>https://major.io/2016/08/23/whats-happening-in-openstack-ansible-whoa-august-2016/</guid><description>Welcome to the third post in the series of What&amp;rsquo;s Happening in OpenStack-Ansible (WHOA) posts that I&amp;rsquo;m assembling each month. OpenStack-Ansible is a flexible framework for deploying enterprise-grade OpenStack clouds. In fact, I use OpenStack-Ansible to deploy the OpenStack cloud underneath the virtual machine that runs this blog!
My goal with these posts is to inform more people about what we&amp;rsquo;re doing in the OpenStack-Ansible community and bring on more contributors to the project.</description></item><item><title>Preventing critical services from deploying on the same OpenStack host</title><link>https://major.io/2016/08/09/preventing-critical-services-from-deploying-on-the-same-openstack-host/</link><pubDate>Tue, 09 Aug 2016 17:07:35 +0000</pubDate><guid>https://major.io/2016/08/09/preventing-critical-services-from-deploying-on-the-same-openstack-host/</guid><description>OpenStack&amp;rsquo;s compute service, nova, manages all of the virtual machines within a OpenStack cloud. When you ask nova to build an instance, or a group of instances, nova&amp;rsquo;s scheduler system determines which hypervisors should run each instance. The scheduler uses filters to figure out where each instance belongs.
However, there are situations where the scheduler might put more than one of your instances on the same host, especially when resources are constrained.</description></item><item><title>OpenStack instances come online with multiple network ports attached</title><link>https://major.io/2016/08/03/openstack-instances-come-online-with-multiple-network-ports-attached/</link><pubDate>Wed, 03 Aug 2016 14:40:16 +0000</pubDate><guid>https://major.io/2016/08/03/openstack-instances-come-online-with-multiple-network-ports-attached/</guid><description>I ran into an interesting problem recently in my production OpenStack deployment that runs the Mitaka release. On various occasions, instances were coming online with multiple network ports attached, even though I only asked for one network port.
The problem If I issued a build request for ten instances, I&amp;rsquo;d usually end up with this:
6 instances with one network port attached 2-3 instances with two network ports attached (not what I want) 1-2 instances with three or four network ports attached (definitely not what I want) When I examined the instances with multiple network ports attached, I found that one of the network ports would be marked as up while the others would be marked as down.</description></item><item><title>Talk recap: The friendship of OpenStack and Ansible</title><link>https://major.io/2016/06/28/talk-recap/</link><pubDate>Wed, 29 Jun 2016 03:43:21 +0000</pubDate><guid>https://major.io/2016/06/28/talk-recap/</guid><description>The 2016 Red Hat Summit is underway in San Francisco this week and I delivered a talk with Robyn Bergeron earlier today. Our talk, When flexibility met simplicity: The friendship of OpenStack and Ansible, explained how Ansible can reduce the complexity of OpenStack environments without sacrificing the flexibility that private clouds offer.
The talk started at the same time as lunch began and the Partner Pavilion first opened, so we had some stiff competition for attendees' attention.</description></item><item><title>Getting started with gertty</title><link>https://major.io/2016/05/11/getting-started-gertty/</link><pubDate>Wed, 11 May 2016 13:45:53 +0000</pubDate><guid>https://major.io/2016/05/11/getting-started-gertty/</guid><description>When you&amp;rsquo;re ready to commit code in an OpenStack project, your patch will eventually land in a Gerrit queue for review. The web interface works well for most users, but it can be challenging to use when you have a large amount of projects to monitor. I recently became a core developer on the OpenStack-Ansible project and I searched for a better solution to handle lots of active reviews.
This is where gertty can help.</description></item><item><title>Automated Letâ€™s Encrypt DNS challenges with Rackspace Cloud DNS</title><link>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</link><pubDate>Thu, 31 Mar 2016 19:39:50 +0000</pubDate><guid>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</guid><description>Let&amp;rsquo;s Encrypt has taken the world by storm by providing free SSL certificates that can be renewed via automated methods. They have issued over 1.4 million certificates since launch in the fall of 2015.
If you are not familiar with how Let&amp;rsquo;s Encrypt operates, here is an extremely simple explanation:
Create a private key Make a request for a new certificate Complete the challenge process You have a certificate! That is highly simplified, but there is plenty of detail available on how the whole system works.</description></item><item><title>Segmentation faults with sphinx and pyenv</title><link>https://major.io/2016/02/09/segmentation-faults-with-sphinx-and-pyenv/</link><pubDate>Tue, 09 Feb 2016 14:09:44 +0000</pubDate><guid>https://major.io/2016/02/09/segmentation-faults-with-sphinx-and-pyenv/</guid><description>I&amp;rsquo;m a big fan of the pyenv project because it makes installing multiple python versions a simple process. However, I kept stumbling into a segmentation fault whenever I tried to build documentation with sphinx in Python 2.7.11:
writing output... [100%] unreleased [app] emitting event: 'doctree-resolved'(&amp;lt;document: &amp;lt;section &amp;quot;current series release notes&amp;quot;...&amp;gt;&amp;gt;, u'unreleased') [app] emitting event: 'html-page-context'(u'unreleased', 'page.html', {'file_suffix': '.html', 'has_source': True, 'show_sphinx': True, 'last generating indices... genindex[app] emitting event: 'html-page-context'('genindex', 'genindex.html', {'pathto': &amp;lt;function pathto at 0x7f4279d51230&amp;gt;, 'file_suffix': '.</description></item><item><title>Enabling kwallet after accidentally disabling it</title><link>https://major.io/2016/01/28/enabling-kwallet-after-accidentally-disabling-it/</link><pubDate>Thu, 28 Jan 2016 16:27:44 +0000</pubDate><guid>https://major.io/2016/01/28/enabling-kwallet-after-accidentally-disabling-it/</guid><description>Although I use GNOME 3 as my desktop environment, I prefer KDE&amp;rsquo;s kwallet service to gnome-keyring for some functions. The user interface is a little easier to use and it&amp;rsquo;s easier to link up to the keyring module in Python.
Accidentally disabling kwallet A few errant mouse clicks caused me to accidentally disable the kwalletd service earlier today and I was struggling to get it running again. The daemon is usually started by dbus and I wasn&amp;rsquo;t entirely sure how to start it properly.</description></item><item><title>Nobody is using your software project. Now what?</title><link>https://major.io/2016/01/15/nobody-using-software-project-now/</link><pubDate>Fri, 15 Jan 2016 17:35:48 +0000</pubDate><guid>https://major.io/2016/01/15/nobody-using-software-project-now/</guid><description>Working with open source software is an amazing experience. The collaborative process around creation, refinement, and even maintenance, drives more developers to work on open source software more often. However, every developer finds themselves writing code that very few people actually use.
For some developers, this can be really bothersome. You offer your code up to the world only to find that the world is much less interested than you expected.</description></item><item><title>supernova 2.2.0 is available</title><link>https://major.io/2015/12/04/supernova-2-2-0-is-available/</link><pubDate>Fri, 04 Dec 2015 15:04:39 +0000</pubDate><guid>https://major.io/2015/12/04/supernova-2-2-0-is-available/</guid><description>Thanks to all of the contributors that helped make a new release of supernova possible! Version 2.2.0 is available on GitHub or PyPi.
Changes There&amp;rsquo;s now a fix for some Pygi keyring errors that appeared on the console for some systems that use GnomeKeyring for credential storage. Thanks to dbolackrs for the fix and to gtmanfred for updating the tests.
Justin added some functionality to provide shorter listings of environment variables when you ask supernova to print all of the configurations from your .</description></item><item><title>supernova is coming to Fedora repositories</title><link>https://major.io/2015/09/11/supernova-is-coming-to-fedora-repositories/</link><pubDate>Fri, 11 Sep 2015 13:13:42 +0000</pubDate><guid>https://major.io/2015/09/11/supernova-is-coming-to-fedora-repositories/</guid><description>If you use Fedora, you will soon be able to install supernova via a Fedora package! The packages are currently in the testing repositories but they will soon be available in the stable repositories for Fedora 22, 23, and rawhide.
Want it right now? If you want to install supernova now, simply tell dnf to install it from the updates-testing repository:
dnf install --enablerepo=updates-testing supernova supernova in EPEL A few people have asked for supernova to be added to EPEL, but the version of the click module for python is too old.</description></item><item><title>Using systemd-networkd with bonding on Rackspaceâ€™s OnMetal servers</title><link>https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/</link><pubDate>Fri, 21 Aug 2015 14:00:46 +0000</pubDate><guid>https://major.io/2015/08/21/using-systemd-networkd-with-bonding-on-rackspaces-onmetal-servers/</guid><description>I&amp;rsquo;ve written about systemd-networkd in the past and how easy it can be to set up new network devices and tunnels. However, the documentation on systemd-networkd with bonding is a bit lacking (but I have a pull request pending for that).
Rackspace&amp;rsquo;s OnMetal Servers are a good place to test since they have bonded networks configured by default. They&amp;rsquo;re also quite fast and always fun for experiments.
To get started, head on over to the Rackspace Cloud control panel and build a compute-1 OnMetal server and choose Fedora 22 as your operating system.</description></item><item><title>Making things more super with supernova 2.0</title><link>https://major.io/2015/07/18/making-things-more-super-with-supernova-2-0/</link><pubDate>Sat, 18 Jul 2015 17:42:29 +0000</pubDate><guid>https://major.io/2015/07/18/making-things-more-super-with-supernova-2-0/</guid><description>I started supernova a little over three years ago with the idea of making it easier to use novaclient. Three years and a few downloads later, it manages multiple different OpenStack clients, like nova, glance, and trove along with some handy features for users who manage a large number of environments.
What&amp;rsquo;s new? With some help from some friends who are much better at writing Python than I am (thanks Paul, Matt and Jason), I restructured supernova to make it more testable.</description></item><item><title>Automatic package updates with dnf</title><link>https://major.io/2015/05/11/automatic-package-updates-with-dnf/</link><pubDate>Tue, 12 May 2015 01:22:10 +0000</pubDate><guid>https://major.io/2015/05/11/automatic-package-updates-with-dnf/</guid><description>With Fedora 22&amp;rsquo;s release date quickly approaching, it&amp;rsquo;s time to familiarize yourself with dnf. It&amp;rsquo;s especially important since clean installs of Fedora 22 won&amp;rsquo;t have yum.
Almost all of the command line arguments are the same but automated updates are a little different. If you&amp;rsquo;re used to yum-updatesd, then you&amp;rsquo;ll want to look into dnf-automatic.
Installation Getting the python code and systemd unit files for automated dnf updates is a quick process:</description></item><item><title>Enjoy supernova 1.0.0</title><link>https://major.io/2014/05/27/enjoy-supernova-1-0-0/</link><pubDate>Tue, 27 May 2014 13:19:31 +0000</pubDate><guid>https://major.io/2014/05/27/enjoy-supernova-1-0-0/</guid><description>The first supernova commit to GitHub appeared just over two years ago. It&amp;rsquo;s been stable for quite some time, but it&amp;rsquo;s made it to version 1.0.0 today!
As always, you can get supernova from PyPi using pip:
pip install -U supernova All of the documentation has moved to ReadTheDocs and it looks much better than the giant README file in GitHub that served as the documentation for so long. Thanks to everyone that has committed code, found bugs, or called out my inability to write Python!</description></item><item><title>Testing grouped environment support for supernova</title><link>https://major.io/2014/05/04/testing-grouped-environment-support-for-supernova/</link><pubDate>Mon, 05 May 2014 02:43:04 +0000</pubDate><guid>https://major.io/2014/05/04/testing-grouped-environment-support-for-supernova/</guid><description>I&amp;rsquo;ve added some grouped environment support for supernova tonight. This allows you to run the same action across a group of environments listed in your supernova configuration file. To give you an idea of how this works, I have two environments in my supernova file called prodord and prodiad. Both of them are my production environments at Rackspace:
[prodord] SUPERNOVA_GROUP=prodrax OS_AUTH_URL=https://identity.api.rackspacecloud.com/v2.0/ OS_AUTH_SYSTEM=rackspace OS_REGION_NAME=ORD OS_TENANT_NAME=USE_KEYRING[&amp;#39;prodcloudauthuser&amp;#39;] OS_PROJECT_ID=USE_KEYRING[&amp;#39;prodcloudauthuser&amp;#39;] OS_PASSWORD=USE_KEYRING[&amp;#39;prodcloudauthpass&amp;#39;] OS_PROJECT_ID=[my account number] [prodiad] SUPERNOVA_GROUP=prodrax OS_AUTH_URL=https://identity.</description></item><item><title>Small update for supernova 0.9.6</title><link>https://major.io/2014/05/01/small-update-for-supernova-0-9-6/</link><pubDate>Thu, 01 May 2014 14:32:13 +0000</pubDate><guid>https://major.io/2014/05/01/small-update-for-supernova-0-9-6/</guid><description>A supernova user ran into a tough problem where supernova didn&amp;rsquo;t seem to obey a configuration within the supernova configuration file. After checking python module versions and re-checking the configuration file a multitude of times, we discovered that there were variables defined in the user&amp;rsquo;s ~/.bash_profile that were not overwritten. It&amp;rsquo;s key to remember how supernova works:
supernova copies your current environment variables into a dictionary any configuration options from the supernova configuration are applied to the dictionary the dictionary is used to set environment variables only for the subprocess that runs nova (or the executable of your choice) your original environment variables are left unaltered.</description></item><item><title>supernova 0.9.5 is available</title><link>https://major.io/2014/04/29/supernova-0-9-5-is-available/</link><pubDate>Tue, 29 Apr 2014 13:14:54 +0000</pubDate><guid>https://major.io/2014/04/29/supernova-0-9-5-is-available/</guid><description>I just pushed supernova 0.9.5 to pypi and it&amp;rsquo;s now available for installation using pip. You can get the latest version by running:
pip install --upgrade supernova Some of the new features include the ability to use suprernova with other executables, like glance. Place a configuration option within your ~/.supernova file that looks like this:
OS_EXECUTABLE=/usr/bin/glance Once you do that, supernova will package up all of your environment variables as it normally would, but it will call glance instead of nova.</description></item></channel></rss>