<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ansible on Major Hayden 🤠</title><link>https://major.io/tags/ansible/</link><description>Recent content in ansible on Major Hayden 🤠</description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-sa/2.0/" target="_blank" rel="noopener">CC BY-SA 2.0&lt;/a></copyright><lastBuildDate>Fri, 05 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://major.io/tags/ansible/index.xml" rel="self" type="application/rss+xml"/><item><title>Inspecting OpenShift cgroups from inside the pod</title><link>https://major.io/2019/04/05/inspecting-openshift-cgroups-from-inside-the-pod/</link><pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/04/05/inspecting-openshift-cgroups-from-inside-the-pod/</guid><description>My team at Red Hat builds a lot of kernels in OpenShift pods as part of our work with the Continuous Kernel Integration (CKI) project. We have lots of different pod sizes depending on the type of work we are doing and our GitLab runners spawn these pods based on the tags in our GitLab CI pipeline.
Compiling with make When you compile a large software project, such as the Linux kernel, you can use multiple CPU cores to speed up the build.</description></item><item><title>Running Ansible in OpenShift with arbitrary UIDs</title><link>https://major.io/2019/03/22/running-ansible-in-openshift-with-arbitrary-uids/</link><pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate><guid>https://major.io/2019/03/22/running-ansible-in-openshift-with-arbitrary-uids/</guid><description>My work at Red Hat involves testing lots and lots of kernels from various sources and we use GitLab CE to manage many of our repositories and run our CI jobs. Those jobs run in thousands of OpenShift containers that we spawn every day.
OpenShift has some handy security features that we like. First, each container is mounted read-only with some writable temporary space (and any volumes that you mount). Also, OpenShift uses arbitrarily assigned user IDs (UIDs) for each container.</description></item><item><title>Ensuring keepalived starts after the network is ready</title><link>https://major.io/2017/12/15/ensuring-keepalived-starts-network-ready/</link><pubDate>Fri, 15 Dec 2017 21:18:37 +0000</pubDate><guid>https://major.io/2017/12/15/ensuring-keepalived-starts-network-ready/</guid><description>After a recent OpenStack-Ansible (OSA) deployment on CentOS, I found that keepalived was not starting properly at boot time:
Keepalived_vrrp[801]: Cant find interface br-mgmt for vrrp_instance internal !!! Keepalived_vrrp[801]: Truncating auth_pass to 8 characters Keepalived_vrrp[801]: VRRP is trying to assign ip address 172.29.236.11/32 to unknown br-mgmt interface !!! go out and fix your conf !!! Keepalived_vrrp[801]: Cant find interface br-mgmt for vrrp_instance external !!! Keepalived_vrrp[801]: Truncating auth_pass to 8 characters Keepalived_vrrp[801]: VRRP is trying to assign ip address 192.</description></item><item><title>Changes in RHEL 7 Security Technical Implementation Guide Version 1, Release 3</title><link>https://major.io/2017/11/02/changes-in-rhel-7-security-technical-implementation-guide-version-1-release-3/</link><pubDate>Thu, 02 Nov 2017 15:00:25 +0000</pubDate><guid>https://major.io/2017/11/02/changes-in-rhel-7-security-technical-implementation-guide-version-1-release-3/</guid><description>The latest release of the Red Hat Enterprise Linux Security Technical Implementation Guide (STIG) was published last week. This release is Version 1, Release 3, and it contains four main changes:
V-77819 - Multifactor authentication is required for graphical logins V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled V-77823 - Single user mode must require user authentication V-77825 - Address space layout randomization (ASLR) must be enabled Deep dive Let&amp;rsquo;s break down this list to understand what each one means.</description></item><item><title>Import RPM repository GPG keys from other keyservers temporarily</title><link>https://major.io/2017/09/20/import-rpm-repository-keys-from-other-keyservers-temporarily/</link><pubDate>Wed, 20 Sep 2017 15:24:13 +0000</pubDate><guid>https://major.io/2017/09/20/import-rpm-repository-keys-from-other-keyservers-temporarily/</guid><description>I&amp;rsquo;ve been working through some patches to OpenStack-Ansible lately to optimize how we configure yum repositories in our deployments. During that work, I ran into some issues where pgp.mit.edu was returning 500 errors for some requests to retrieve GPG keys.
Ansible was returning this error:
curl: (22) The requested URL returned error: 502 Proxy Error error: http://pgp.mit.edu:11371/pks/lookup?op=get&amp;amp;search=0x61E8806C: import read failed(2) How does the rpm command know which keyserver to use? Let&amp;rsquo;s use the --showrc argument to show how it is configured:</description></item><item><title>Apply the STIG to even more operating systems with ansible-hardening</title><link>https://major.io/2017/07/21/apply-stig-operating-systems-ansible-hardening/</link><pubDate>Fri, 21 Jul 2017 17:38:46 +0000</pubDate><guid>https://major.io/2017/07/21/apply-stig-operating-systems-ansible-hardening/</guid><description>Tons of improvements made their way into the ansible-hardening role in preparation for the OpenStack Pike release next month. The role has a new name, new documentation and extra tests.
The role uses the Security Technical Implementation Guide (STIG) produced by the Defense Information Systems Agency (DISA) and applies the guidelines to Linux hosts using Ansible. Every control is configurable via simple Ansible variables and each control is thoroughly documented.</description></item><item><title>Old role, new name: ansible-hardening</title><link>https://major.io/2017/06/27/old-role-new-name-ansible-hardening/</link><pubDate>Tue, 27 Jun 2017 20:49:44 +0000</pubDate><guid>https://major.io/2017/06/27/old-role-new-name-ansible-hardening/</guid><description>The interest in the openstack-ansible-security role has taken off faster than I expected, and one piece of constant feedback I received was around the name of the role. Some users were unsure if they needed to use the role in an OpenStack cloud or if the OpenStack-Ansible project was required.
The role works everywhere - OpenStack cloud or not. I started a mailing list thread on the topic and we eventually settled on a new name: ansible-hardening!</description></item><item><title>Enable AppArmor on a Debian Jessie cloud image</title><link>https://major.io/2017/05/24/enable-apparmor-on-a-debian-jessie-cloud-image/</link><pubDate>Wed, 24 May 2017 16:14:03 +0000</pubDate><guid>https://major.io/2017/05/24/enable-apparmor-on-a-debian-jessie-cloud-image/</guid><description>I merged some initial Debian support into the openstack-ansible-security role and ran into an issue enabling AppArmor. The apparmor service failed to start and I found this output in the system journal:
kernel: AppArmor: AppArmor disabled by boot time parameter Digging in That was unexpected. I was using the Debian jessie cloud image and it uses extlinux as the bootloader. The file didn&amp;rsquo;t reference AppArmor at all:
# cat /boot/extlinux/extlinux.conf default linux timeout 1 label linux kernel boot/vmlinuz-3.</description></item><item><title>OpenStack Summit Boston 2017 Recap</title><link>https://major.io/2017/05/11/openstack-summit-boston-2017-recap/</link><pubDate>Fri, 12 May 2017 00:25:55 +0000</pubDate><guid>https://major.io/2017/05/11/openstack-summit-boston-2017-recap/</guid><description>The OpenStack Summit wrapped up today in Boston and it was a great week! There were plenty of informative breakouts and some interesting keynotes.
Keynotes Beth Cohen shared some of the work that Verizon has done with software-defined WAN on customer-premises equipment (CPE). She showed a demo of how customers could easily provision virtual network hardware, such as firewalls or intrusion detection systems, without waiting for hardware or cabling changes. I&amp;rsquo;m less familiar with the world of telcos, so I found this really interesting.</description></item><item><title>OpenStack-Ansible networking on CentOS 7 with systemd-networkd</title><link>https://major.io/2017/04/13/openstack-ansible-on-centos-7-with-systemd-networkd/</link><pubDate>Thu, 13 Apr 2017 13:18:09 +0000</pubDate><guid>https://major.io/2017/04/13/openstack-ansible-on-centos-7-with-systemd-networkd/</guid><description>Although OpenStack-Ansible doesn&amp;rsquo;t fully support CentOS 7 yet, the support is almost ready. I have a four node Ocata cloud deployed on CentOS 7, but I decided to change things around a bit and use systemd-networkd instead of NetworkManager or the old rc scripts.
This post will explain how to configure the network for an OpenStack-Ansible cloud on CentOS 7 with systemd-networkd.
Each one of my OpenStack hosts has four network interfaces and each one has a specific task:</description></item><item><title>RHEL 7 STIG v1 updates for openstack-ansible-security</title><link>https://major.io/2017/04/05/rhel-7-stig-v1-updates-for-openstack-ansible-security/</link><pubDate>Wed, 05 Apr 2017 17:46:17 +0000</pubDate><guid>https://major.io/2017/04/05/rhel-7-stig-v1-updates-for-openstack-ansible-security/</guid><description>DISA&amp;rsquo;s final release of the Red Hat Enterprise Linux (RHEL) 7 Security Technical Implementation Guide (STIG) came out a few weeks ago and it has plenty of improvements and changes. The openstack-ansible-security role has already been updated with these changes.
Quite a few duplicated STIG controls were removed and a few new ones were added. Some of the controls in the pre-release were difficult to implement, especially those that changed parameters for PKI-based authentication.</description></item><item><title>augenrules fails with “rule exists” when loading rules into auditd</title><link>https://major.io/2017/01/03/augenrules-fails-with-rule-exists-when-loading-rules-into-auditd/</link><pubDate>Tue, 03 Jan 2017 19:01:46 +0000</pubDate><guid>https://major.io/2017/01/03/augenrules-fails-with-rule-exists-when-loading-rules-into-auditd/</guid><description>When I came back from the holiday break, I found that the openstack-ansible-security role wasn&amp;rsquo;t passing tests any longer. The Ansible playbook stopped when augenrules ran to load the new audit rules. The error wasn&amp;rsquo;t terribly helpful:
/usr/sbin/augenrules: No change Error sending add rule data request (Rule exists) There was an error in line 5 of /etc/audit/audit.rules A duplicated rule? I&amp;rsquo;ve been working on lots of changes to implement the Red Hat Enterprise Linux 7 Security Technical Implementation Guide (STIG) and I assumed I put in the same rule twice with an errant copy and paste.</description></item><item><title>What’s Happening in OpenStack-Ansible (WHOA) – September 2016</title><link>https://major.io/2016/09/30/whats-happening-in-openstack-ansible-whoa-september-2016/</link><pubDate>Fri, 30 Sep 2016 14:33:33 +0000</pubDate><guid>https://major.io/2016/09/30/whats-happening-in-openstack-ansible-whoa-september-2016/</guid><description>Welcome to the fourth post in the series of What&amp;rsquo;s Happening in OpenStack-Ansible (WHOA) posts that I&amp;rsquo;m assembling each month. OpenStack-Ansible is a flexible framework for deploying enterprise-grade OpenStack clouds. In fact, I use OpenStack-Ansible to deploy the OpenStack cloud underneath the virtual machine that runs this blog!
My goal with these posts is to inform more people about what we&amp;rsquo;re doing in the OpenStack-Ansible community and bring on more contributors to the project.</description></item><item><title>What’s Happening in OpenStack-Ansible (WHOA) – August 2016</title><link>https://major.io/2016/08/23/whats-happening-in-openstack-ansible-whoa-august-2016/</link><pubDate>Tue, 23 Aug 2016 20:35:19 +0000</pubDate><guid>https://major.io/2016/08/23/whats-happening-in-openstack-ansible-whoa-august-2016/</guid><description>Welcome to the third post in the series of What&amp;rsquo;s Happening in OpenStack-Ansible (WHOA) posts that I&amp;rsquo;m assembling each month. OpenStack-Ansible is a flexible framework for deploying enterprise-grade OpenStack clouds. In fact, I use OpenStack-Ansible to deploy the OpenStack cloud underneath the virtual machine that runs this blog!
My goal with these posts is to inform more people about what we&amp;rsquo;re doing in the OpenStack-Ansible community and bring on more contributors to the project.</description></item><item><title>What’s Happening in OpenStack-Ansible (WHOA) – July 2016</title><link>https://major.io/2016/07/22/whats-happening-in-openstack-ansible-whoa-july-2016/</link><pubDate>Fri, 22 Jul 2016 15:48:18 +0000</pubDate><guid>https://major.io/2016/07/22/whats-happening-in-openstack-ansible-whoa-july-2016/</guid><description>This post is the second installment in the series of What&amp;rsquo;s Happening in OpenStack-Ansible (WHOA) posts that I&amp;rsquo;m assembling each month. My goal is to inform more people about what we&amp;rsquo;re doing in the OpenStack-Ansible community and bring on more contributors to the project.
July brought lots of changes for the OpenStack-Ansible project and the remaining work for the Newton release is coming together well. Many of the changes made in the Newton branch have made deployments faster, more reliable and more repeatable.</description></item><item><title>Talk recap: The friendship of OpenStack and Ansible</title><link>https://major.io/2016/06/28/talk-recap/</link><pubDate>Wed, 29 Jun 2016 03:43:21 +0000</pubDate><guid>https://major.io/2016/06/28/talk-recap/</guid><description>The 2016 Red Hat Summit is underway in San Francisco this week and I delivered a talk with Robyn Bergeron earlier today. Our talk, When flexibility met simplicity: The friendship of OpenStack and Ansible, explained how Ansible can reduce the complexity of OpenStack environments without sacrificing the flexibility that private clouds offer.
The talk started at the same time as lunch began and the Partner Pavilion first opened, so we had some stiff competition for attendees' attention.</description></item><item><title>My list of must-see sessions at Red Hat Summit 2016</title><link>https://major.io/2016/06/26/almost-time-red-hat-summit-2016/</link><pubDate>Sun, 26 Jun 2016 10:52:38 +0000</pubDate><guid>https://major.io/2016/06/26/almost-time-red-hat-summit-2016/</guid><description>The Red Hat Summit starts this week in San Francisco, and a few folks asked me about the sessions that they shouldn&amp;rsquo;t miss. The schedule can be overwhelming for first timers and it can be difficult at times to discern the technical sessions from the ones that are more sales-oriented.
If you&amp;rsquo;re in San Francisco, and you want to learn a bit more about using Ansible to manage OpenStack environments, come to the session that I am co-presenting with Robyn Bergeron: When flexibility met simplicity: The friendship of OpenStack and Ansible.</description></item><item><title>What’s Happening in OpenStack-Ansible (WHOA) – June 2016</title><link>https://major.io/2016/06/15/whats-happening-openstack-ansible-whoa-june-2016/</link><pubDate>Wed, 15 Jun 2016 19:58:52 +0000</pubDate><guid>https://major.io/2016/06/15/whats-happening-openstack-ansible-whoa-june-2016/</guid><description>The world of OpenStack moves quickly. Each day brings new features, new bug fixes, and new ways of thinking. The OpenStack-Ansible community strives to understand these changes and make them easier for operators to implement.
The OpenStack-Ansible project is a collection of playbooks and roles written by operators for operators. These playbooks make it easier to deploy, maintain, and upgrade an OpenStack cloud.
Keeping up with the changes in the OpenStack-Ansible project is challenging.</description></item><item><title>Talk Recap: Automated security hardening with OpenStack-Ansible</title><link>https://major.io/2016/04/26/talk-recap-automated-security-hardening-openstack-ansible/</link><pubDate>Tue, 26 Apr 2016 21:19:02 +0000</pubDate><guid>https://major.io/2016/04/26/talk-recap-automated-security-hardening-openstack-ansible/</guid><description>Today is the second day of the OpenStack Summit in Austin and I offered up a talk on host security hardening in OpenStack clouds. You can download the slides or watch the video here:
Here&amp;rsquo;s a quick recap of the talk and the conversations afterward:
Security tug-of-war Information security is a challenging task, mainly because it is more than just a technical problem. Technology is a big part of it, but communication, culture, and compromise are also critical.</description></item><item><title>OpenStack Summit in Austin is almost here!</title><link>https://major.io/2016/04/21/brace-openstack-summit-austin-coming/</link><pubDate>Thu, 21 Apr 2016 13:16:02 +0000</pubDate><guid>https://major.io/2016/04/21/brace-openstack-summit-austin-coming/</guid><description>OpenStack comes home to Austin on Monday for the OpenStack Summit! I will be there with plenty of other Rackers to learn, collaborate, and share our story.
If you&amp;rsquo;re interested in applying automated security hardening to an OpenStack cloud, be sure to drop by my talk on Tuesday from 11:15 to 11:55 AM. I&amp;rsquo;ll explain how Rackspace uses the openstack-ansible-security Ansible role to automatically apply hardening standards to servers in an OpenStack private cloud.</description></item><item><title>Automated Let’s Encrypt DNS challenges with Rackspace Cloud DNS</title><link>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</link><pubDate>Thu, 31 Mar 2016 19:39:50 +0000</pubDate><guid>https://major.io/2016/03/31/automated-lets-encrypt-dns-challenges-with-rackspace-cloud-dns/</guid><description>Let&amp;rsquo;s Encrypt has taken the world by storm by providing free SSL certificates that can be renewed via automated methods. They have issued over 1.4 million certificates since launch in the fall of 2015.
If you are not familiar with how Let&amp;rsquo;s Encrypt operates, here is an extremely simple explanation:
Create a private key Make a request for a new certificate Complete the challenge process You have a certificate! That is highly simplified, but there is plenty of detail available on how the whole system works.</description></item><item><title>What I learned while securing Ubuntu</title><link>https://major.io/2015/10/14/what-i-learned-while-securing-ubuntu/</link><pubDate>Wed, 14 Oct 2015 20:53:12 +0000</pubDate><guid>https://major.io/2015/10/14/what-i-learned-while-securing-ubuntu/</guid><description>The blog posts have slowed down a bit lately because I&amp;rsquo;ve been heads down on a security project at work. I&amp;rsquo;m working with people in the OpenStack community to create a new Ansible role called openstack-ansible-security. The role aims to improve host security by using hardening standards to improve the configuration of various parts of the operating system.
This means applying security hardening to Ubuntu 14.04 systems since that&amp;rsquo;s the only host operating system supported by openstack-ansible at the moment.</description></item><item><title>Automated testing for Ansible CIS playbook on RHEL/CentOS 6</title><link>https://major.io/2015/08/05/automated-testing-for-ansible-cis-playbook-on-rhelcentos-6/</link><pubDate>Wed, 05 Aug 2015 13:13:52 +0000</pubDate><guid>https://major.io/2015/08/05/automated-testing-for-ansible-cis-playbook-on-rhelcentos-6/</guid><description>I started working on the Ansible CIS playbook for CentOS and RHEL 6 back in 2014 and I&amp;rsquo;ve made a few changes to increase quality and make it easier to use.
First off, the role itself is no longer a submodule. You can now just clone the repository and get rolling. This should reduce the time it takes to get started.
Also, all pull requests to the repository now go through integration testing at Rackspace.</description></item><item><title>Test Fedora 22 at Rackspace with Ansible</title><link>https://major.io/2015/03/24/test-fedora-22-at-rackspace-with-ansible/</link><pubDate>Tue, 24 Mar 2015 13:55:08 +0000</pubDate><guid>https://major.io/2015/03/24/test-fedora-22-at-rackspace-with-ansible/</guid><description>Fedora 22 will be arriving soon and it&amp;rsquo;s easy to test on Rackspace&amp;rsquo;s cloud with my Ansible playbook:
https://github.com/major/ansible-rax-fedora22 As with the previous playbook I created for Fedora 21, this playbook will ensure your Fedora 21 instance is fully up to date and then perform the upgrade to Fedora 22.
WARNING: It&amp;rsquo;s best to use this playbook against a non-production system. Fedora 22 is an alpha release at the time of this post&amp;rsquo;s writing.</description></item><item><title>Try out LXC with an Ansible playbook</title><link>https://major.io/2014/12/17/try-lxc-ansible-playbook/</link><pubDate>Wed, 17 Dec 2014 13:50:26 +0000</pubDate><guid>https://major.io/2014/12/17/try-lxc-ansible-playbook/</guid><description>The world of containers is constantly evolving lately. The latest turn of events involves the CoreOS developers when they announced Rocket as an alternative to Docker. However, LXC still lingers as a very simple path to begin using containers.
When I talk to people about LXC, I often hear people talk about how difficult it is to get started with LXC. After all, Docker provides an easy-to-use image downloading function that allows you to spin up multiple different operating systems in Docker containers within a few minutes.</description></item></channel></rss>