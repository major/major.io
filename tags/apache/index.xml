<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>apache on Major Hayden's Blog ü§†</title><link>https://major.io/tags/apache/</link><description>Recent content in apache on Major Hayden's Blog ü§†</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 14 Apr 2015 18:53:34 +0000</lastBuildDate><atom:link href="https://major.io/tags/apache/index.xml" rel="self" type="application/rss+xml"/><item><title>Woot! Eight years of my blog</title><link>https://major.io/2015/04/14/woot-eight-years-of-my-blog/</link><pubDate>Tue, 14 Apr 2015 18:53:34 +0000</pubDate><guid>https://major.io/2015/04/14/woot-eight-years-of-my-blog/</guid><description>&lt;p>The spring of 2015 marks eight years of this blog! I&amp;rsquo;ve learned plenty of tough lessons along the way and I&amp;rsquo;ve made some changes recently that might be handy for other people. After watching &lt;a href="https://twitter.com/sashalaund">Sasha Laundy&amp;rsquo;s&lt;/a> video from her awesome talk at Pycon 2015&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, I&amp;rsquo;m even more energized to share what I&amp;rsquo;ve learned with other people. &lt;em>(Seriously: Go watch that video or review the slides whether you work in IT or not. It&amp;rsquo;s worth your time.)&lt;/em>&lt;/p>
&lt;p>Let&amp;rsquo;s start from the beginning.&lt;/p></description></item><item><title>Apache‚Äôs mod_proxy, mod_ssl, and BitTorrent Sync</title><link>https://major.io/2014/09/27/apaches-mod_proxy-mod_ssl-bittorrent-sync/</link><pubDate>Sun, 28 Sep 2014 02:08:18 +0000</pubDate><guid>https://major.io/2014/09/27/apaches-mod_proxy-mod_ssl-bittorrent-sync/</guid><description>BitTorrent Sync allows you to keep files synchronized between multiple computers or mobile devices. It&amp;rsquo;s a handy way to do backups, share files with friends, or automate the movement of data from device to device. It comes with a web frontend, called the Web UI, that allows for connections over HTTP or HTTPS.
Using HTTP across the internet to administer Sync seems totally absurd, so I decided to enable HTTPS. I quickly realized two things:</description></item><item><title>Guide to securing apache</title><link>https://major.io/2013/10/22/guide-to-securing-apache/</link><pubDate>Tue, 22 Oct 2013 12:30:51 +0000</pubDate><guid>https://major.io/2013/10/22/guide-to-securing-apache/</guid><description>I stumbled upon a helpful guide to securing an apache server via Reddit&amp;rsquo;s /r/netsec subreddit. Without further ado, here&amp;rsquo;s a link to the guide:
Apache web server hardening &amp;amp; security guide The guide covers the simplest changes, like reducing ServerTokens output and eliminating indexes, all the way up through configuring mod_security and using the SpiderLabs GitHub repository to add additional rules.
If you&amp;rsquo;d like a more in-depth post about installing mod_security, I&amp;rsquo;d recommend this one from Tecmint.</description></item><item><title>Using OpenSSL‚Äôs s_client command with web servers using Server Name Indication (SNI)</title><link>https://major.io/2012/02/07/using-openssls-s_client-command-with-web-servers-using-server-name-indication-sni/</link><pubDate>Tue, 07 Feb 2012 14:07:41 +0000</pubDate><guid>https://major.io/2012/02/07/using-openssls-s_client-command-with-web-servers-using-server-name-indication-sni/</guid><description>One of the handiest tools in the OpenSSL toolbox is s_client. You can quickly view lots of details about the SSL certificates installed on a particular server and diagnose problems. For example, use this command to look at Google&amp;rsquo;s SSL certificates:
openssl s_client -connect encrypted.google.com:443 You&amp;rsquo;ll see the chain of certificates back to the original certificate authority where Google bought its certificate at the top, a copy of their SSL certificate in plain text in the middle, and a bunch of session-related information at the bottom.</description></item><item><title>OpenStack bleeding-edge Python packages are now available</title><link>https://major.io/2012/02/01/openstack-bleeding-edge-python-packages-are-now-available/</link><pubDate>Wed, 01 Feb 2012 15:05:16 +0000</pubDate><guid>https://major.io/2012/02/01/openstack-bleeding-edge-python-packages-are-now-available/</guid><description>I sometimes enjoy living on the edge occasionally and that sometimes means I keep up with OpenStack changes commit by commit. If you&amp;rsquo;re in the same boat as I am, you may save some time by using my repository of bleeding-edge Python packages from the OpenStack projects:
pypi.mhtx.net Python packages are updated moments after the commit is merged into the repositories under OpenStack&amp;rsquo;s github account.
Although the packages will contain the latest code available, rest assured that the code has passed an initial code review (by humans), unit tests, and varying levels of functional or integrated testing.</description></item><item><title>Create a local PyPi repository using only mod_rewrite</title><link>https://major.io/2012/01/31/create-a-local-pypi-repository-using-only-mod_rewrite/</link><pubDate>Wed, 01 Feb 2012 04:02:49 +0000</pubDate><guid>https://major.io/2012/01/31/create-a-local-pypi-repository-using-only-mod_rewrite/</guid><description>Regular users of Python&amp;rsquo;s package tools like pip or easy_install are probably familiar with the PyPi repository. It&amp;rsquo;s a one-stop-shop to learn more about available Python packages and get them installed on your server.
However, certain folks may find the need to host a local PyPi repository for their own packages. You may need it to store Python code which you don&amp;rsquo;t plan to release publicly or you may need to add proprietary patches to upstream Python packages.</description></item><item><title>Getting apache, PHP, and memcached working with SELinux</title><link>https://major.io/2011/09/07/getting-apache-php-and-memcached-working-with-selinux/</link><pubDate>Thu, 08 Sep 2011 03:55:00 +0000</pubDate><guid>https://major.io/2011/09/07/getting-apache-php-and-memcached-working-with-selinux/</guid><description>I&amp;rsquo;m using SELinux more often now on my Fedora 15 installations and I came up against a peculiar issue today on a new server. My PHP installation is configured to store its sessions in memcached and I brought over some working configurations from another server. However, each time I accessed a page which tried to initiate a session, the page load would hang for about a minute and I&amp;rsquo;d find this in my apache error logs:</description></item><item><title>Throwing thoughtful ‚Äú403 Forbidden‚Äù responses with apache</title><link>https://major.io/2010/11/17/throwing-thoughtful-403-forbidden-responses-with-apache/</link><pubDate>Wed, 17 Nov 2010 13:47:19 +0000</pubDate><guid>https://major.io/2010/11/17/throwing-thoughtful-403-forbidden-responses-with-apache/</guid><description>If you offer a web service that users query via scripts or other applications, you&amp;rsquo;ll probably find that some people will begin to abuse the service. My icanhazip.com site is no exception.
While many of the users have reasonable usage patterns, there are some users that query the site more than once per second from the same IP address. If you haven&amp;rsquo;t used the site before, all it does is return your public IP address in plain text.</description></item><item><title>Private network interfaces: the forgotten security hole</title><link>https://major.io/2010/03/01/private-network-interfaces-the-forgotten-security-hole/</link><pubDate>Tue, 02 Mar 2010 00:55:07 +0000</pubDate><guid>https://major.io/2010/03/01/private-network-interfaces-the-forgotten-security-hole/</guid><description>Regardless of the type of hosting you&amp;rsquo;re using - dedicated or cloud - it&amp;rsquo;s important to take network interface security seriously. Most often, threats from the internet are the only ones mentioned. However, if you share a private network with other customers, you have just as much risk on that interface.
Many cloud providers allow you access to a private network environment where you can exchange data with other instances or other services offered by the provider.</description></item><item><title>A New Year System Administrator Inspiration</title><link>https://major.io/2010/01/03/a-new-year-system-administrator-inspiration/</link><pubDate>Mon, 04 Jan 2010 02:53:53 +0000</pubDate><guid>https://major.io/2010/01/03/a-new-year-system-administrator-inspiration/</guid><description>Happy New Year! I certainly hope it&amp;rsquo;s a great one for you, your family, and your business. As the new year begins, I figured it would be a good time to sit down and answer a question that I hear very often:
How do I become a better systems administrator?
The best way to become a better systems administrator is to fully understand the theory of what&amp;rsquo;s happening in your server&amp;rsquo;s environment.</description></item><item><title>Fedora 11 httpd: alloc_listener: failed to get a socket for (null)</title><link>https://major.io/2009/08/14/fedora-11-httpd-alloc_listener-failed-to-get-a-socket-for-null/</link><pubDate>Fri, 14 Aug 2009 17:14:02 +0000</pubDate><guid>https://major.io/2009/08/14/fedora-11-httpd-alloc_listener-failed-to-get-a-socket-for-null/</guid><description>If you use Fedora 11 in a virtualized environment, you may have seen this error recently if you&amp;rsquo;ve updated to apr-1.3.8-1:
The issue is related to three kernel calls that are used in apr-1.3.8-1: accept4(), dup3() and epoll_create1(). Without these calls, apache is unable to start.
Update on August 17, 2009:the Fedora team has pushed apr-1.3.8-2 into the stable repositories for Fedora 11, which eliminates the need for the temporary fix shown below.</description></item><item><title>Rotating rails logs when using Phusion Passenger</title><link>https://major.io/2009/06/26/rotating-rails-logs-when-using-phusion-passenger/</link><pubDate>Fri, 26 Jun 2009 15:09:54 +0000</pubDate><guid>https://major.io/2009/06/26/rotating-rails-logs-when-using-phusion-passenger/</guid><description>I found a great post on Overstimulate about handling the rotation of rails logs when you use Phusion Passenger. Most of the data for your application should end up in the apache logs, but if your site is highly dynamic, you may end up with a giant production log if you&amp;rsquo;re not careful.
Toss this into /etc/logrotate.d/yourrailsapplication:
For a detailed explanation, see the post on Overstimulate.</description></item><item><title>Apache 2.2: internal dummy connection</title><link>https://major.io/2008/09/23/apache-22-internal-dummy-connection/</link><pubDate>Wed, 24 Sep 2008 01:42:21 +0000</pubDate><guid>https://major.io/2008/09/23/apache-22-internal-dummy-connection/</guid><description>After working with some RHEL 5 servers fairly regularly, I noticed a reduction in Apache 2.2 performance when many connections were made to the server. There were messages like these streaming into the access_log as well:
127.0.0.1 - - [21/Aug/2008:12:00:10 -0400] &amp;quot;GET / HTTP/1.0&amp;quot; 200 2269 &amp;quot;-&amp;quot; &amp;quot;Apache/2.2.3 (Red Hat) (internal dummy connection)&amp;quot;&amp;lt;br /&amp;gt; 127.0.0.1 - - [21/Aug/2008:12:00:11 -0400] &amp;quot;GET / HTTP/1.0&amp;quot; 200 2269 &amp;quot;-&amp;quot; &amp;quot;Apache/2.2.3 (Red Hat) (internal dummy connection)&amp;quot;&amp;lt;br /&amp;gt; 127.</description></item><item><title>Compress your web content for better performance</title><link>https://major.io/2008/09/19/compress-your-web-content-for-better-performance/</link><pubDate>Fri, 19 Sep 2008 17:00:47 +0000</pubDate><guid>https://major.io/2008/09/19/compress-your-web-content-for-better-performance/</guid><description>Most web developers expend a lot of energy optimizing queries, reducing the overhead of functions, and streamlining their application&amp;rsquo;s overall flow. However, many forget that one of the simplest adjustments is the compression of data as it leaves the web server.
Luckily, mod_deflate makes this easy, and the Apache documentation has a handy initial configuration available:
&amp;lt;Location /&amp;gt; SetOutputFilter DEFLATE BrowserMatch ^Mozilla/4 gzip-only-text/html BrowserMatch ^Mozilla/4\.0[678] no-gzip BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html SetEnvIfNoCase Request_URI \.</description></item><item><title>Change the default Apache character set</title><link>https://major.io/2007/11/15/change-the-default-apache-character-set/</link><pubDate>Thu, 15 Nov 2007 18:09:01 +0000</pubDate><guid>https://major.io/2007/11/15/change-the-default-apache-character-set/</guid><description>By default, Red Hat Enterprise Linux 4 sets the default character set in Apache to UTF-8. Your specific web application may need for the character set to be set to a different value, and the change can be made fairly easily. Here&amp;rsquo;s an example where the character set is changed to ISO-8859-1:
First, adjust the AddDefaultCharset directive in /etc/httpd/conf/httpd.conf:
#AddDefaultCharset UTF-8&amp;lt;br /&amp;gt; AddDefaultCharset ISO-8859-1 Then, reload Apache and check your headers:</description></item><item><title>Apache: No space left on device: Couldn‚Äôt create accept lock</title><link>https://major.io/2007/08/24/apache-no-space-left-on-device-couldnt-create-accept-lock/</link><pubDate>Fri, 24 Aug 2007 21:55:30 +0000</pubDate><guid>https://major.io/2007/08/24/apache-no-space-left-on-device-couldnt-create-accept-lock/</guid><description>This error completely stumped me a couple of weeks ago. Apparently someone was adjusting the Apache configuration, then they checked their syntax and attempted to restart Apache. It went down without a problem, but it refused to start properly, and didn&amp;rsquo;t bind to any ports.
Within the Apache error logs, this message appeared over and over:
Apache is basically saying ‚ÄúI want to start, but I need to write some things down before I can start, and I have nowhere to write them!</description></item></channel></rss>