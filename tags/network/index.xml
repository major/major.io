<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>network on Major Hayden's Blog ðŸ¤ </title><link>https://major.io/tags/network/</link><description>Recent content in network on Major Hayden's Blog ðŸ¤ </description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 15 Dec 2017 21:18:37 +0000</lastBuildDate><atom:link href="https://major.io/tags/network/index.xml" rel="self" type="application/rss+xml"/><item><title>Ensuring keepalived starts after the network is ready</title><link>https://major.io/2017/12/15/ensuring-keepalived-starts-network-ready/</link><pubDate>Fri, 15 Dec 2017 21:18:37 +0000</pubDate><guid>https://major.io/2017/12/15/ensuring-keepalived-starts-network-ready/</guid><description>After a recent OpenStack-Ansible (OSA) deployment on CentOS, I found that keepalived was not starting properly at boot time:
Keepalived_vrrp[801]: Cant find interface br-mgmt for vrrp_instance internal !!! Keepalived_vrrp[801]: Truncating auth_pass to 8 characters Keepalived_vrrp[801]: VRRP is trying to assign ip address 172.29.236.11/32 to unknown br-mgmt interface !!! go out and fix your conf !!! Keepalived_vrrp[801]: Cant find interface br-mgmt for vrrp_instance external !!! Keepalived_vrrp[801]: Truncating auth_pass to 8 characters Keepalived_vrrp[801]: VRRP is trying to assign ip address 192.</description></item><item><title>Fixing OpenStack noVNC consoles that ignore keyboard input</title><link>https://major.io/2017/05/18/fixing-openstack-novnc-consoles-that-ignore-keyboard-input/</link><pubDate>Thu, 18 May 2017 16:58:56 +0000</pubDate><guid>https://major.io/2017/05/18/fixing-openstack-novnc-consoles-that-ignore-keyboard-input/</guid><description>I opened up a noVNC console to a virtual machine today in my OpenStack cloud but found that the console wouldn&amp;rsquo;t take keyboard input. The Send Ctrl-Alt-Del button in the top right of the window worked just fine, but I couldn&amp;rsquo;t type anywhere in the console. This happened on an Ocata OpenStack cloud deployed with OpenStack-Ansible on CentOS 7.
Test the network path The network path to the console is a little deep for this deployment, but here&amp;rsquo;s a quick explanation:</description></item><item><title>Talk Recap: Holistic Security for OpenStack Clouds</title><link>https://major.io/2016/10/31/talk-recap-holistic-security-for-openstack-clouds/</link><pubDate>Mon, 31 Oct 2016 15:52:47 +0000</pubDate><guid>https://major.io/2016/10/31/talk-recap-holistic-security-for-openstack-clouds/</guid><description>Thanks to everyone who attended my talk at the OpenStack Summit in Barcelona! I really enjoyed sharing some tips with the audience and it was great to meet some attendees in person afterwards.
If you weren&amp;rsquo;t able to make it, don&amp;rsquo;t fret! This post will cover some of the main points of the talk and link to the video and slides.
Purpose OpenStack clouds are inherently complex. Operating a cloud involves a lot of moving pieces in software, hardware, and networking.</description></item><item><title>OpenStack instances come online with multiple network ports attached</title><link>https://major.io/2016/08/03/openstack-instances-come-online-with-multiple-network-ports-attached/</link><pubDate>Wed, 03 Aug 2016 14:40:16 +0000</pubDate><guid>https://major.io/2016/08/03/openstack-instances-come-online-with-multiple-network-ports-attached/</guid><description>I ran into an interesting problem recently in my production OpenStack deployment that runs the Mitaka release. On various occasions, instances were coming online with multiple network ports attached, even though I only asked for one network port.
The problem If I issued a build request for ten instances, I&amp;rsquo;d usually end up with this:
6 instances with one network port attached 2-3 instances with two network ports attached (not what I want) 1-2 instances with three or four network ports attached (definitely not what I want) When I examined the instances with multiple network ports attached, I found that one of the network ports would be marked as up while the others would be marked as down.</description></item><item><title>Troubleshooting OpenStack network connectivity</title><link>https://major.io/2016/05/16/troubleshooting-openstack-network-connectivity/</link><pubDate>Tue, 17 May 2016 02:43:41 +0000</pubDate><guid>https://major.io/2016/05/16/troubleshooting-openstack-network-connectivity/</guid><description>NOTE: This post is a work in progress. If you find something that I missed, feel free to leave a comment. I&amp;rsquo;ve made plenty of silly mistakes, but I&amp;rsquo;m sure I&amp;rsquo;ll make a few more. :)
Completing a deployment of an OpenStack cloud is an amazing feeling. There is so much automation and power at your fingertips as soon as you&amp;rsquo;re finished. However, the mood quickly turns sour when you create that first instance and it never responds to pings.</description></item><item><title>Customizing systemdâ€™s network device names</title><link>https://major.io/2015/09/28/customizing-systemds-network-device-names/</link><pubDate>Tue, 29 Sep 2015 02:08:22 +0000</pubDate><guid>https://major.io/2015/09/28/customizing-systemds-network-device-names/</guid><description>Earlier today, I wrote a post about my first thoughts on the Supermicro 5028D-T4NT server. The 10Gb interfaces on the server came up with the names eth0 and eth1. That wasn&amp;rsquo;t what I expected. There&amp;rsquo;s tons of detail on the problem in the blog post as well as the Github issue.
Kay Sievers gave a hint about how to adjust the interfacing naming in a more granular way than simply disabling the predictable network names.</description></item><item><title>Restoring wireless and Bluetooth state after reboot in Fedora 22</title><link>https://major.io/2015/07/19/restoring-wireless-and-bluetooth-state-after-reboot-in-fedora-22/</link><pubDate>Sun, 19 Jul 2015 22:14:30 +0000</pubDate><guid>https://major.io/2015/07/19/restoring-wireless-and-bluetooth-state-after-reboot-in-fedora-22/</guid><description>My upgrade to Fedora 22 on the ThinkPad X1 Carbon was fairly uneventful and the hiccups were minor. One of the more annoying items that I&amp;rsquo;ve been struggling with for quite some time is how to boot up with the wireless LAN and Bluetooth disabled by default. Restoring wireless and Bluetooth state between reboots is normally handled quite well in Fedora.
In Fedora 21, NetworkManager saved my settings between reboots. For example, if I shut down with wifi off and Bluetooth on, the laptop would boot up later with wifi off and Bluetooth on.</description></item><item><title>Share a wireless connection via ethernet in GNOME 3.14</title><link>https://major.io/2015/03/29/share-a-wireless-connection-via-ethernet-in-gnome-3-14/</link><pubDate>Mon, 30 Mar 2015 02:31:19 +0000</pubDate><guid>https://major.io/2015/03/29/share-a-wireless-connection-via-ethernet-in-gnome-3-14/</guid><description>&lt;p>There are some situations where you want to do the opposite of creating a wireless hotspot and you want to share a wireless connection to an ethernet connection. For example, if you&amp;rsquo;re at a hotel that offers only WiFi internet access, you could share that connection to an ethernet switch and plug in more devices. Also, you could get online with your wireless connection and create a small NAT network to test a network device without mangling your home network.&lt;/p></description></item><item><title>Creating a bridge for virtual machines using systemd-networkd</title><link>https://major.io/2015/03/26/creating-a-bridge-for-virtual-machines-using-systemd-networkd/</link><pubDate>Thu, 26 Mar 2015 13:17:08 +0000</pubDate><guid>https://major.io/2015/03/26/creating-a-bridge-for-virtual-machines-using-systemd-networkd/</guid><description>There are plenty of guides out there for making ethernet bridges in Linux to support virtual machines using built-in network scripts or NetworkManager. I decided to try my hand with creating a bridge using only systemd-networkd and it was surprisingly easy.
First off, you&amp;rsquo;ll need a version of systemd with networkd support. Fedora 20 and 21 will work just fine. RHEL/CentOS 7 and Arch Linux should also work. Much of the networkd support has been in systemd for quite a while, but if you&amp;rsquo;re looking for fancier network settings, like bonding, you&amp;rsquo;ll want at least systemd 216.</description></item><item><title>Xerox ColorQube 9302 and Linux</title><link>https://major.io/2015/03/15/xerox-colorqube-9302-and-linux/</link><pubDate>Mon, 16 Mar 2015 02:23:07 +0000</pubDate><guid>https://major.io/2015/03/15/xerox-colorqube-9302-and-linux/</guid><description>I do a bunch of Linux-related tasks daily. Some are difficult and others are easy. Printing has always been my nemesis.
Some printers offer up highly standardized methods for printing. For example, many HP printers simply work with JetDirect and PCL 5. However, the quirkier ones that require plenty of transformations before paper starts rolling can be tricky.
We have some Xerox ColorQube printers at the office and they require some proprietary software to get them printing under Linux.</description></item><item><title>Trust an IP address with firewalldâ€™s rich rules</title><link>https://major.io/2014/11/24/trust-ip-address-firewallds-rich-rules/</link><pubDate>Mon, 24 Nov 2014 14:44:09 +0000</pubDate><guid>https://major.io/2014/11/24/trust-ip-address-firewallds-rich-rules/</guid><description>Managing firewall rules with iptables can be tricky at times. The rule syntax itself isn&amp;rsquo;t terribly difficult but you can quickly run into problems if you don&amp;rsquo;t save your rules to persistent storage after you get your firewall configured. Things can also get out of hand quickly if you run a lot of different tables with jumps scattered through each.
Why FirewallD? FirewallD&amp;rsquo;s goal is to make this process a bit easier by adding a daemon to the mix.</description></item><item><title>HOWTO: Time Warner Cable and IPv6</title><link>https://major.io/2014/09/11/howto-time-warner-cable-ipv6/</link><pubDate>Thu, 11 Sep 2014 14:43:03 +0000</pubDate><guid>https://major.io/2014/09/11/howto-time-warner-cable-ipv6/</guid><description>Time Warner has gradually rolled out IPv6 connectivity to their Road Runner customers over the past couple of years and it started appearing on my home network earlier this year. I had some issues getting the leases to renew properly after they expired (TWC&amp;rsquo;s default lease length appears to be seven days) and there were some routing problems that cropped up occasionally. However, over the past month, things seem to have settled down on TWC&amp;rsquo;s San Antonio network.</description></item><item><title>httpry 0.1.8 available for RHEL and CentOS 7</title><link>https://major.io/2014/08/13/httpry-rhel-centos-7/</link><pubDate>Wed, 13 Aug 2014 13:20:28 +0000</pubDate><guid>https://major.io/2014/08/13/httpry-rhel-centos-7/</guid><description>Red Hat Enterprise Linux and CentOS 7 users can now install httpry 0.1.8 in EPEL 7 Beta. The new httpry version is also available for RHEL/CentOS 6 and supported Fedora versions (19, 20, 21 branched, and rawhide).
Configuring EPEL on a RHEL/CentOS server is easy. Follow the instructions on EPEL&amp;rsquo;s site and install the epel-release RPM that matches your OS release version.
If you haven&amp;rsquo;t used httpry before, check the output on Jason Bittel&amp;rsquo;s site.</description></item><item><title>Unexpected predictable network naming with systemd</title><link>https://major.io/2014/08/06/unexpected-predictable-network-naming-systemd/</link><pubDate>Wed, 06 Aug 2014 21:09:34 +0000</pubDate><guid>https://major.io/2014/08/06/unexpected-predictable-network-naming-systemd/</guid><description>While using a Dell R720 at work today, we stumbled upon a problem where the predictable network device naming with systemd gave us some unpredictable results. The server has four onboard network ports (two 10GbE and two 1GbE) and an add-on 10GbE card with two additional ports.
Running lspci gives this output:
# lspci | grep Eth 01:00.0 Ethernet controller: Intel Corporation Ethernet Controller 10-Gigabit X540-AT2 (rev 01) 01:00.1 Ethernet controller: Intel Corporation Ethernet Controller 10-Gigabit X540-AT2 (rev 01) 08:00.</description></item><item><title>Adventures in live booting Linux distributions</title><link>https://major.io/2014/07/29/adventures-in-live-booting-linux-distributions/</link><pubDate>Tue, 29 Jul 2014 13:05:54 +0000</pubDate><guid>https://major.io/2014/07/29/adventures-in-live-booting-linux-distributions/</guid><description>We&amp;rsquo;re all familiar with live booting Linux distributions. Almost every Linux distribution under the sun has a method for making live CD&amp;rsquo;s, writing live USB sticks, or booting live images over the network. The primary use case for some distributions is on a live medium (like KNOPPIX).
However, I embarked on an adventure to look at live booting Linux for a different use case. Sure, many live environments are used for demonstrations or installations - temporary activities for a desktop or a laptop.</description></item><item><title>Configure static IP addresses for Project Atomicâ€™s KVM image</title><link>https://major.io/2014/04/23/configure-static-ip-addresses-for-project-atomics-kvm-image/</link><pubDate>Wed, 23 Apr 2014 15:14:39 +0000</pubDate><guid>https://major.io/2014/04/23/configure-static-ip-addresses-for-project-atomics-kvm-image/</guid><description>Amid all of the Docker buzz at the Red Hat Summit, Project Atomic was launched. It&amp;rsquo;s a minimalistic Fedora 20 image with a few tweaks, including rpm-ostree and geard.
There are great instructions on the site for firing up a test instance under KVM but my test server doesn&amp;rsquo;t have a DHCP server on its network. You can use Project Atomic with static IP addresses fairly easily:
Create a one-line /etc/sysconfig/network:</description></item><item><title>Speed up your Fedora PXE installations by hosting the stage2 installer locally</title><link>https://major.io/2013/11/03/speed-up-your-fedora-pxe-installations-by-hosting-the-stage2-installer-locally/</link><pubDate>Sun, 03 Nov 2013 17:04:33 +0000</pubDate><guid>https://major.io/2013/11/03/speed-up-your-fedora-pxe-installations-by-hosting-the-stage2-installer-locally/</guid><description>In my previous post about installing Fedora via PXE, I forgot to mention a big time saver for the installation. A Fedora PXE installation requires a few different things:
initial ramdisk (initrd.img) kernel (vmlinuz) installation repository If you only specify an installation repository, then Anaconda tries to drag down a 214MB squashfs.img file in each installation. You can host this file locally by recreating a portion of a Fedora repo&amp;rsquo;s structure and dropping two files into it.</description></item><item><title>Iâ€™m on the hunt for experienced security analysts!</title><link>https://major.io/2013/10/14/im-on-the-hunt-for-experienced-security-analysts/</link><pubDate>Tue, 15 Oct 2013 02:17:13 +0000</pubDate><guid>https://major.io/2013/10/14/im-on-the-hunt-for-experienced-security-analysts/</guid><description>Want to work for a company that finds new approaches to traditional IT problems? Do you want to work with a team that provides Fanatical Support through keeping customer data safe?
Our Global Security Services team is looking for experienced security analysts who can take network analysis and malware defense to the next level.
The responsibilities of the role include:
Monitor global NIDS, Firewall, and log correlation tools for potential threats Initiate escalation procedure to counteract potential threats/vulnerabilities Provide Incident remediation and prevention documentation Document and conform to processes related to security monitoring Provide performance metrics as necessary Provide customer service that exceeds our customers expectations Experience with tools such as Wireshark, Hex Rays, IDA Pro or Hex workshop.</description></item><item><title>PXE boot Fedora 19 using a Mikrotik firewall</title><link>https://major.io/2013/07/23/pxe-boot-fedora-19-using-a-mikrotik-firewall/</link><pubDate>Tue, 23 Jul 2013 21:47:33 +0000</pubDate><guid>https://major.io/2013/07/23/pxe-boot-fedora-19-using-a-mikrotik-firewall/</guid><description>Outside of the RHCA exams, I haven&amp;rsquo;t configured a PXE system for my personal needs. A colleague demoed his PXE setup for me and I was hooked. Once I realized how much time I could save when I&amp;rsquo;m building and tearing down virtual machines, it made complete sense. This post will show you how to configure PXE and tftpd in Mikrotik&amp;rsquo;s RouterOS to boot and install Fedora 19 (as well as provide rescue environments).</description></item><item><title>Changing your ssh serverâ€™s port from the default: Is it worth it?</title><link>https://major.io/2013/05/14/changing-your-ssh-servers-port-from-the-default-is-it-worth-it/</link><pubDate>Wed, 15 May 2013 04:43:41 +0000</pubDate><guid>https://major.io/2013/05/14/changing-your-ssh-servers-port-from-the-default-is-it-worth-it/</guid><description>Changing my ssh port from the default port (22) has been one of my standard processes for quite some time when I build new servers or virtual machines. However, I see arguments crop up regularly about it (like this reddit thread or this other one).
Before I go any further, let&amp;rsquo;s settle the &amp;ldquo;security through obscurity&amp;rdquo; argument. (This could probably turn into its own post but I&amp;rsquo;ll be brief for now.</description></item><item><title>New icanhaz features: reverse DNS and traceroutes</title><link>https://major.io/2013/03/16/new-icanhaz-features-reverse-dns-and-traceroutes/</link><pubDate>Sun, 17 Mar 2013 03:13:53 +0000</pubDate><guid>https://major.io/2013/03/16/new-icanhaz-features-reverse-dns-and-traceroutes/</guid><description>After adding some upgrades for icanhazip.com, I wanted to go a bit further. Adding reverse DNS (PTR) lookups and traceroutes seemed like a decent idea!
Want to beta test some new features on icanhazptr.com and icanhaztrace.com? Give them a try!
Getting your reverse DNS entry is easy:
$ curl -4 icanhazptr.com ord.icanhazip.com $ curl -6 icanhazptr.com ord.icanhazip.com Traceroutes are straightforward as well:
$ curl -4 icanhaztrace.com traceroute to 166.78.118.193 (166.78.118.193), 30 hops max, 60 byte packets 1 212.</description></item><item><title>Red Hat Summit 2012: Wednesday</title><link>https://major.io/2012/06/28/red-hat-summit-2012-wednesday/</link><pubDate>Thu, 28 Jun 2012 06:03:51 +0000</pubDate><guid>https://major.io/2012/06/28/red-hat-summit-2012-wednesday/</guid><description>Wednesday was action-packed with dramatic keynotes and great sessions. The morning was kicked off by Paul Cormier and he talked about some new products coming from Red Hat. Much of the product releases were centered around cloud offerings (like Openshift) and his talk was mainly aimed at CIO&amp;rsquo;s and decision makers. There wasn&amp;rsquo;t a lot of technical detail within his talk but it was refreshing to hear a Linux vendor talk about their products as being revolutionary steps in pulling away from vendor lock-in and proprietary solutions.</description></item><item><title>Lesser-known but extremely handy Linux tools</title><link>https://major.io/2012/05/11/lesser-known-but-extremely-handy-linux-tools/</link><pubDate>Fri, 11 May 2012 21:28:58 +0000</pubDate><guid>https://major.io/2012/05/11/lesser-known-but-extremely-handy-linux-tools/</guid><description>KristÃ³f KovÃ¡cs has a fantastic post about some lesser-known Linux tools that can really come in handy in different situations.
If you haven&amp;rsquo;t tried dstat (I hadn&amp;rsquo;t until I saw KristÃ³f&amp;rsquo;s post), this is a great one to try. You can keep a running tally on various server metrics including load average, network transfer, and disk operations.
Here is some sample output:
----total-cpu-usage---- ---paging-- ---load-avg--- ------memory-usage----- -net/total- ---procs--- --io/total- ---system-- ----tcp-sockets---- usr sys idl wai hiq siq| in out | 1m 5m 15m | used buff cach free| recv send|run blk new| read writ| int csw |lis act syn tim clo 0 0 100 0 0 0| 0 0 |0.</description></item><item><title>Kerberos for haters</title><link>https://major.io/2012/02/02/kerberos-for-haters/</link><pubDate>Fri, 03 Feb 2012 04:29:32 +0000</pubDate><guid>https://major.io/2012/02/02/kerberos-for-haters/</guid><description>I&amp;rsquo;ll be the first one to admit that Kerberos drives me a little insane. It&amp;rsquo;s a requirement for two of the exams in Red Hat&amp;rsquo;s RHCA certification track and I&amp;rsquo;ve been forced to learn it. It provides some pretty nice security features for large server environments. You get central single sign ons, encrypted authentication, and bidirectional validation. However, getting it configured can be a real pain due to some rather archaic commands and shells.</description></item><item><title>Native IPv6 connectivity in Mikrotikâ€™s RouterOS</title><link>https://major.io/2012/01/11/native-ipv6-connectivity-in-mikrotiks-routeros/</link><pubDate>Wed, 11 Jan 2012 13:30:07 +0000</pubDate><guid>https://major.io/2012/01/11/native-ipv6-connectivity-in-mikrotiks-routeros/</guid><description>It&amp;rsquo;s no secret that I&amp;rsquo;m a big fan of the Routerboard devices and the RouterOS software from Mikrotik that runs on them. The hardware is solid, the software is stable and feature-rich, and I found a great vendor that ships quickly.
I recently added a RB493G (~ $230 USD) to sit in front of a pair of colocated servers. The majority of the setup routine was the same as with my previous devices except for the IPv6 configuration.</description></item></channel></rss>